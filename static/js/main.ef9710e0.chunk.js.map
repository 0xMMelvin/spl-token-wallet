{"version":3,"sources":["utils/connection.js","utils/utils.js","utils/wallet.js","utils/tokens/instructions.js","components/SolanaIcon.js","components/NavigationFrame.js","components/LoadingIndicator.js","components/DialogForm.js","components/CopyableDisplay.js","components/TokenInfoDialog.js","utils/notifications.js","components/AddTokenDialog.js","components/SendDialog.js","components/DepositDialog.js","components/BalancesList.js","components/DebugButtons.js","pages/WalletPage.js","pages/PopupPage.js","pages/LoginPage.js","App.js","serviceWorker.js","index.js","utils/tokens/data.js","utils/fetch-loop.js","utils/wallet-seed.js","utils/tokens/names.js","utils/tokens/index.js"],"names":["ConnectionContext","React","createContext","ConnectionProvider","children","useLocalStorageState","clusterApiUrl","endpoint","setEndpoint","connection","useMemo","Connection","Provider","value","useConnection","useContext","useConnectionConfig","context","useIsProdNetwork","useSolanaExplorerUrlSuffix","useAccountInfo","publicKey","cacheKey","tuple","toBase58","useAsyncData","a","getAccountInfo","accountInfo","loaded","useEffect","id","onAccountChange","refreshCache","removeAccountChangeListener","refreshAccountInfo","clearCache","setInitialAccountInfo","setCache","initializeOnly","sleep","ms","Promise","resolve","setTimeout","key","defaultState","useState","storedState","localStorage","getItem","JSON","parse","state","setState","setLocalStorageState","useCallback","newState","removeItem","setItem","stringify","useEffectAfterTimeout","effect","timeout","handle","clearTimeout","useListener","emitter","eventName","forceUpdate","listener","i","on","removeListener","abbreviateAddress","address","base58","slice","length","confirmTransaction","signature","startTime","Date","race","then","result","onSignature","Error","err","console","log","slot","Wallet","seed","walletIndex","getTokenPublicKeys","getOwnedTokenAccounts","account","accounts","map","createTokenAccount","tokenAddress","createAndInitializeTokenAccount","payer","mintPublicKey","newAccount","Account","tokenAccountCost","getMinimumBalanceForRentExemption","ACCOUNT_LAYOUT","span","transferToken","source","destination","amount","equals","transferSol","transferTokens","owner","sourcePublicKey","destinationPublicKey","sendTransaction","SystemProgram","transfer","fromPubkey","toPubkey","lamports","this","getAccountFromSeed","accountIndex","derivedSeed","bip32","derivePath","privateKey","nacl","sign","keyPair","fromSeed","secretKey","WalletContext","WalletProvider","walletSeedChanged","getUnlockedMnemonicAndSeed","mnemonic","setWalletIndex","wallet","Buffer","from","useWallet","useWalletPublicKeys","tokenPublicKeys","refreshWalletPublicKeys","useBalanceInfo","accountInfoLoaded","TOKEN_PROGRAM_ID","parseTokenAccountData","data","mint","mintInfo","mintInfoLoaded","useTokenName","name","symbol","WRAPPED_SOL_MINT","decimals","tokenName","tokenSymbol","valid","parseMintData","e","useWalletSelector","walletCount","setWalletCount","addresses","seedBuffer","Array","keys","PublicKey","LAYOUT","BufferLayout","addVariant","instructionMaxSpan","Math","max","Object","values","registry","r","encodeTokenInstructionData","instruction","b","alloc","encode","initializeMint","mintAuthority","freezeAuthority","pubkey","isSigner","isWritable","SYSVAR_RENT_PUBKEY","TransactionInstruction","toBuffer","freezeAuthorityOption","programId","initializeAccount","mintTo","SolanaIcon","SvgIcon","viewBox","d","useStyles","makeStyles","theme","content","paddingTop","spacing","paddingBottom","paddingLeft","paddingRight","title","flexGrow","button","marginLeft","menuItemIcon","minWidth","NavigationFrame","classes","AppBar","position","Toolbar","Typography","variant","className","component","WalletSelector","NetworkSelector","Hidden","xsDown","Button","color","target","rel","href","smUp","Tooltip","arrow","IconButton","anchorEl","setAnchorEl","networks","networkLabels","onClick","Menu","open","onClose","anchorOrigin","vertical","horizontal","getContentAnchorEl","network","MenuItem","selected","ListItemIcon","fontSize","index","Divider","root","display","alignItems","justifyContent","width","height","padding","LoadingIndicator","delay","rest","visible","setVisible","style","CircularProgress","DialogForm","onSubmit","Dialog","PaperProps","preventDefault","marginTop","marginBottom","whiteSpace","buttonIcon","marginRight","CopyableDisplay","label","autoFocus","buttonProps","helperText","enqueueSnackbar","useSnackbar","textareaRef","useRef","TextField","inputRef","ref","current","multiline","readOnly","onFocus","currentTarget","select","textArea","fullWidth","spellCheck","document","execCommand","autoHideDuration","explorerLink","warning","container","TokenInfoDialog","balanceInfo","urlSuffix","DialogTitle","DialogContent","Link","useSendTransaction","closeSnackbar","sending","setSending","signaturePromise","onSuccess","onError","persist","action","ViewTransactionOnExplorerButton","warn","message","useCallAsync","promise","progressMessage","successMessage","feeFormat","Intl","NumberFormat","undefined","minimumFractionDigits","maximumFractionDigits","tabs","borderBottom","palette","background","paper","AddTokenDialog","updateTokenName","useUpdateTokenName","mintAddress","setMintAddress","setTokenName","setTokenSymbol","popularTokens","TOKENS","tab","setTab","DialogContentText","format","LAMPORTS_PER_SOL","Tabs","textColor","indicatorColor","onChange","Tab","textDecoration","List","disablePadding","token","TokenListItem","disalbed","Fragment","margin","DialogActions","type","disabled","setOpen","ListItem","ListItemText","primary","Collapse","in","unmountOnExit","SendDialog","destinationAddress","setDestinationAddress","transferAmountString","setTransferAmountString","balanceAmount","round","parseFloat","pow","trim","InputProps","endAdornment","InputAdornment","inputProps","step","DepositDialog","useQrCodeStyles","qrcodeButton","qrcodeIcon","qrcodeContainer","flexDirection","Qrcode","showQrcode","setShowQrcode","size","includeMargin","balanceFormat","useGrouping","BalancesList","publicKeys","showAddTokenDialog","setShowAddTokenDialog","Paper","elevation","BalanceListItem","textOverflow","overflowX","itemDetails","buttonContainer","sendDialogOpen","setSendDialogOpen","depositDialogOpen","setDepositDialogOpen","tokenInfoDialogOpen","setTokenInfoDialogOpen","secondary","secondaryTypographyProps","startIcon","DebugButtons","callAsync","noSol","requestAirdropDisabled","requestAirdrop","createAndInitializeMint","initialAccount","WalletPage","isProdNetwork","Container","fixed","maxWidth","Grid","item","xs","PopupPage","opener","origin","URLSearchParams","window","location","hash","get","postMessage","jsonrpc","connectedAccount","setConnectedAccount","hasConnectedAccount","requests","setRequests","unloadHandler","method","addEventListener","removeEventListener","messageHandler","error","ApproveConnectionForm","onApprove","params","focusParent","request","assert","bs58","decode","ApproveSignatureForm","detached","onReject","textAlign","transaction","wordBreak","actions","Card","CardContent","gutterBottom","CardActions","close","LoginPage","restore","setRestore","RestoreWalletForm","goBack","hasLockedMnemonicAndSeed","LoginForm","CreateWalletForm","cursor","mnemonicAndSeed","setMnemonicAndSeed","generateMnemonicAndSeed","savedWords","setSavedWords","ChoosePasswordForm","password","storeMnemonicAndSeed","SeedWordsForm","goForward","confirmed","setConfirmed","paragraph","FormControlLabel","control","Checkbox","checked","setPassword","passwordConfirm","setPasswordConfirm","autoComplete","stayLoggedIn","setStayLoggedIn","loadMnemonicAndSeed","setMnemonic","rows","mnemonicToSeed","App","prefersDarkMode","useMediaQuery","createMuiTheme","blue","self","top","fallback","ThemeProvider","CssBaseline","maxSnack","PageContents","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","MINT_LAYOUT","getOwnedAccountsFilters","memcmp","offset","offsetOf","bytes","dataSize","pageLoadTime","globalCache","Map","globalLoops","loops","has","set","FetchLoopInternal","fn","addListener","loop","stopped","delete","refresh","all","FetchLoopListener","refreshInterval","callback","timeoutId","errors","notifyListeners","waitTime","min","timeSincePageLoad","visibilityState","hasFocus","random","listeners","Set","previousRefreshInterval","add","forEach","asyncFn","useReducer","rerender","bip39","generateMnemonic","toString","validateMnemonic","unlockedMnemonicAndSeed","sessionStorage","EventEmitter","setUnlockedMnemonicAndSeed","emit","plaintext","salt","randomBytes","kdf","iterations","digest","deriveEncryptionKey","nonce","secretbox","nonceLength","encrypted","encodedEncrypted","encodedNonce","encodedSalt","decodedPlaintext","reject","pbkdf2","keyLength","customTokenNamesByNetwork","nameUpdated","info","find","setMaxListeners","filters","_rpcRequest","commitment","resp","executable","filter","every","filterBytes","newAccountPubkey","space","createAccount","signers","push","Transaction"],"mappings":"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","file":"static/js/main.ef9710e0.chunk.js","sourcesContent":["import React, { useContext, useEffect, useMemo } from 'react';\nimport { clusterApiUrl, Connection } from '@solana/web3.js';\nimport { useLocalStorageState } from './utils';\nimport { refreshCache, setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\n\nconst ConnectionContext = React.createContext(null);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState(\n    'endpoint',\n    clusterApiUrl('mainnet-beta'),\n  );\n\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\n    endpoint,\n  ]);\n\n  return (\n    <ConnectionContext.Provider value={{ endpoint, setEndpoint, connection }}>\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  return useContext(ConnectionContext).connection;\n}\n\nexport function useConnectionConfig() {\n  let context = useContext(ConnectionContext);\n  return { endpoint: context.endpoint, setEndpoint: context.setEndpoint };\n}\n\nexport function useIsProdNetwork() {\n  const endpoint = useContext(ConnectionContext).endpoint;\n  return endpoint === clusterApiUrl('mainnet-beta');\n}\n\nexport function useSolanaExplorerUrlSuffix() {\n  const endpoint = useContext(ConnectionContext).endpoint;\n  if (endpoint === clusterApiUrl('devnet')) {\n    return '?cluster=devnet';\n  } else if (endpoint === clusterApiUrl('testnet')) {\n    return '?cluster=testnet';\n  }\n  return '';\n}\n\nexport function useAccountInfo(publicKey) {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return () => {};\n    }\n    const id = connection.onAccountChange(publicKey, () =>\n      refreshCache(cacheKey),\n    );\n    return () => connection.removeAccountChangeListener(id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, publicKey?.toBase58(), cacheKey]);\n  return [accountInfo, loaded];\n}\n\nexport function refreshAccountInfo(connection, publicKey, clearCache = false) {\n  const cacheKey = tuple(connection, publicKey.toBase58());\n  refreshCache(cacheKey, clearCache);\n}\n\nexport function setInitialAccountInfo(connection, publicKey, accountInfo) {\n  const cacheKey = tuple(connection, publicKey.toBase58());\n  setCache(cacheKey, accountInfo, { initializeOnly: true });\n}\n","import { useCallback, useEffect, useState } from 'react';\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function useLocalStorageState(key, defaultState = null) {\n  const [state, setState] = useState(() => {\n    let storedState = localStorage.getItem(key);\n    if (storedState) {\n      return JSON.parse(storedState);\n    }\n    return defaultState;\n  });\n\n  const setLocalStorageState = useCallback(\n    (newState) => {\n      let changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n      setState(newState);\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, JSON.stringify(newState));\n      }\n    },\n    [state, key],\n  );\n\n  return [state, setLocalStorageState];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    let handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  let [, forceUpdate] = useState(0);\n  useEffect(() => {\n    let listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address) {\n  let base58 = address.toBase58();\n  return base58.slice(0, 4) + '…' + base58.slice(base58.length - 4);\n}\n\nexport async function confirmTransaction(connection, signature) {\n  let startTime = new Date();\n  let result = await Promise.race([\n    connection.confirmTransaction(signature, 1).then((result) => result.value),\n    new Promise((resolve) => connection.onSignature(signature, resolve)),\n  ]);\n  if (!result) {\n    throw new Error('Failed to confirm transaction');\n  }\n  if (result.err) {\n    throw new Error(\n      'Error confirming transaction: ' + JSON.stringify(result.err),\n    );\n  }\n  console.log(\n    'Transaction confirmed via %s after %sms',\n    result.slot ? 'REST' : 'WS',\n    new Date() - startTime,\n  );\n  return result;\n}\n","import React, { useContext, useMemo } from 'react';\nimport * as bip32 from 'bip32';\nimport { Account, SystemProgram } from '@solana/web3.js';\nimport nacl from 'tweetnacl';\nimport {\n  setInitialAccountInfo,\n  useAccountInfo,\n  useConnection,\n} from './connection';\nimport {\n  createAndInitializeTokenAccount,\n  getOwnedTokenAccounts,\n  transferTokens,\n} from './tokens';\nimport { TOKEN_PROGRAM_ID, WRAPPED_SOL_MINT } from './tokens/instructions';\nimport {\n  ACCOUNT_LAYOUT,\n  parseMintData,\n  parseTokenAccountData,\n} from './tokens/data';\nimport { useListener, useLocalStorageState } from './utils';\nimport { useTokenName } from './tokens/names';\nimport { refreshCache, useAsyncData } from './fetch-loop';\nimport { getUnlockedMnemonicAndSeed, walletSeedChanged } from './wallet-seed';\n\nexport class Wallet {\n  constructor(connection, seed, walletIndex = 0) {\n    this.connection = connection;\n    this.seed = seed;\n    this.walletIndex = walletIndex;\n    this.account = Wallet.getAccountFromSeed(this.seed, this.walletIndex);\n  }\n\n  static getAccountFromSeed(seed, walletIndex, accountIndex = 0) {\n    const derivedSeed = bip32\n      .fromSeed(seed)\n      .derivePath(`m/501'/${walletIndex}'/0/${accountIndex}`).privateKey;\n    return new Account(nacl.sign.keyPair.fromSeed(derivedSeed).secretKey);\n  }\n\n  get publicKey() {\n    return this.account.publicKey;\n  }\n\n  getTokenPublicKeys = async () => {\n    let accounts = await getOwnedTokenAccounts(\n      this.connection,\n      this.account.publicKey,\n    );\n    return accounts.map(({ publicKey, accountInfo }) => {\n      setInitialAccountInfo(this.connection, publicKey, accountInfo);\n      return publicKey;\n    });\n  };\n\n  createTokenAccount = async (tokenAddress) => {\n    return await createAndInitializeTokenAccount({\n      connection: this.connection,\n      payer: this.account,\n      mintPublicKey: tokenAddress,\n      newAccount: new Account(),\n    });\n  };\n\n  tokenAccountCost = async () => {\n    return this.connection.getMinimumBalanceForRentExemption(\n      ACCOUNT_LAYOUT.span,\n    );\n  };\n\n  transferToken = async (source, destination, amount) => {\n    if (source.equals(this.publicKey)) {\n      return this.transferSol(destination, amount);\n    }\n    return await transferTokens({\n      connection: this.connection,\n      owner: this.account,\n      sourcePublicKey: source,\n      destinationPublicKey: destination,\n      amount,\n    });\n  };\n\n  transferSol = async (destination, amount) => {\n    return await this.connection.sendTransaction(\n      SystemProgram.transfer({\n        fromPubkey: this.publicKey,\n        toPubkey: destination,\n        lamports: amount,\n      }),\n      [this.account],\n    );\n  };\n}\n\nconst WalletContext = React.createContext(null);\n\nexport function WalletProvider({ children }) {\n  useListener(walletSeedChanged, 'change');\n  const { mnemonic, seed } = getUnlockedMnemonicAndSeed();\n  const connection = useConnection();\n  const [walletIndex, setWalletIndex] = useLocalStorageState('walletIndex', 0);\n  const wallet = useMemo(\n    () =>\n      seed\n        ? new Wallet(connection, Buffer.from(seed, 'hex'), walletIndex)\n        : null,\n    [connection, seed, walletIndex],\n  );\n  return (\n    <WalletContext.Provider\n      value={{ wallet, walletIndex, setWalletIndex, seed, mnemonic }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  return useContext(WalletContext).wallet;\n}\n\nexport function useWalletPublicKeys() {\n  let wallet = useWallet();\n  let [tokenPublicKeys, loaded] = useAsyncData(\n    wallet.getTokenPublicKeys,\n    wallet.getTokenPublicKeys,\n  );\n  let publicKeys = [wallet.account.publicKey, ...(tokenPublicKeys ?? [])];\n  return [publicKeys, loaded];\n}\n\nexport function refreshWalletPublicKeys(wallet) {\n  refreshCache(wallet.getTokenPublicKeys);\n}\n\nexport function useBalanceInfo(publicKey) {\n  let [accountInfo, accountInfoLoaded] = useAccountInfo(publicKey);\n  let { mint, owner, amount } = accountInfo?.owner.equals(TOKEN_PROGRAM_ID)\n    ? parseTokenAccountData(accountInfo.data)\n    : {};\n  let [mintInfo, mintInfoLoaded] = useAccountInfo(mint);\n  let { name, symbol } = useTokenName(mint);\n\n  if (!accountInfoLoaded) {\n    return null;\n  }\n\n  if (mint && mint.equals(WRAPPED_SOL_MINT)) {\n    return {\n      amount,\n      decimals: 9,\n      mint,\n      owner,\n      tokenName: 'Wrapped SOL',\n      tokenSymbol: 'SOL',\n      valid: true,\n    };\n  }\n\n  if (mint && mintInfoLoaded) {\n    try {\n      let { decimals } = parseMintData(mintInfo.data);\n      return {\n        amount,\n        decimals,\n        mint,\n        owner,\n        tokenName: name,\n        tokenSymbol: symbol,\n        valid: true,\n      };\n    } catch (e) {\n      return {\n        amount,\n        decimals: 0,\n        mint,\n        owner,\n        tokenName: 'Invalid',\n        tokenSymbol: 'INVALID',\n        valid: false,\n      };\n    }\n  }\n\n  if (!mint) {\n    return {\n      amount: accountInfo?.lamports ?? 0,\n      decimals: 9,\n      mint: null,\n      owner: publicKey,\n      tokenName: 'SOL',\n      tokenSymbol: 'SOL',\n      valid: true,\n    };\n  }\n\n  return null;\n}\n\nexport function useWalletSelector() {\n  const { walletIndex, setWalletIndex, seed } = useContext(WalletContext);\n  const [walletCount, setWalletCount] = useLocalStorageState('walletCount', 1);\n  function selectWallet(walletIndex) {\n    if (walletIndex >= walletCount) {\n      setWalletCount(walletIndex + 1);\n    }\n    setWalletIndex(walletIndex);\n  }\n  const addresses = useMemo(() => {\n    if (!seed) {\n      return [];\n    }\n    const seedBuffer = Buffer.from(seed, 'hex');\n    return [...Array(walletCount).keys()].map(\n      (walletIndex) =>\n        Wallet.getAccountFromSeed(seedBuffer, walletIndex).publicKey,\n    );\n  }, [seed, walletCount]);\n  return { addresses, walletIndex, setWalletIndex: selectWallet };\n}\n\nexport async function mnemonicToSecretKey(mnemonic) {\n  const { mnemonicToSeed } = await import('bip39');\n  const rootSeed = Buffer.from(await mnemonicToSeed(mnemonic), 'hex');\n  const derivedSeed = bip32.fromSeed(rootSeed).derivePath(\"m/501'/0'/0/0\")\n    .privateKey;\n  return nacl.sign.keyPair.fromSeed(derivedSeed).secretKey;\n}\n","import * as BufferLayout from 'buffer-layout';\nimport {\n  PublicKey,\n  SYSVAR_RENT_PUBKEY,\n  TransactionInstruction,\n} from '@solana/web3.js';\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport const WRAPPED_SOL_MINT = new PublicKey(\n  'So11111111111111111111111111111111111111111',\n);\n\nconst LAYOUT = BufferLayout.union(BufferLayout.u8('instruction'));\nLAYOUT.addVariant(\n  0,\n  BufferLayout.struct([\n    BufferLayout.u8('decimals'),\n    BufferLayout.blob(32, 'mintAuthority'),\n    BufferLayout.u8('freezeAuthorityOption'),\n    BufferLayout.blob(32, 'freezeAuthority'),\n  ]),\n  'initializeMint',\n);\nLAYOUT.addVariant(1, BufferLayout.struct([]), 'initializeAccount');\nLAYOUT.addVariant(\n  3,\n  BufferLayout.struct([BufferLayout.nu64('amount')]),\n  'transfer',\n);\nLAYOUT.addVariant(\n  7,\n  BufferLayout.struct([BufferLayout.nu64('amount')]),\n  'mintTo',\n);\nLAYOUT.addVariant(\n  8,\n  BufferLayout.struct([BufferLayout.nu64('amount')]),\n  'burn',\n);\n\nconst instructionMaxSpan = Math.max(\n  ...Object.values(LAYOUT.registry).map((r) => r.span),\n);\n\nfunction encodeTokenInstructionData(instruction) {\n  let b = Buffer.alloc(instructionMaxSpan);\n  let span = LAYOUT.encode(instruction, b);\n  return b.slice(0, span);\n}\n\nexport function initializeMint({\n  mint,\n  decimals,\n  mintAuthority,\n  freezeAuthority,\n}) {\n  let keys = [\n    { pubkey: mint, isSigner: false, isWritable: true },\n    { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n  ];\n  return new TransactionInstruction({\n    keys,\n    data: encodeTokenInstructionData({\n      initializeMint: {\n        decimals,\n        mintAuthority: mintAuthority.toBuffer(),\n        freezeAuthorityOption: !!freezeAuthority,\n        freezeAuthority: (freezeAuthority || new PublicKey()).toBuffer(),\n      },\n    }),\n    programId: TOKEN_PROGRAM_ID,\n  });\n}\n\nexport function initializeAccount({ account, mint, owner }) {\n  let keys = [\n    { pubkey: account, isSigner: false, isWritable: true },\n    { pubkey: mint, isSigner: false, isWritable: false },\n    { pubkey: owner, isSigner: false, isWritable: false },\n    { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n  ];\n  return new TransactionInstruction({\n    keys,\n    data: encodeTokenInstructionData({\n      initializeAccount: {},\n    }),\n    programId: TOKEN_PROGRAM_ID,\n  });\n}\n\nexport function transfer({ source, destination, amount, owner }) {\n  let keys = [\n    { pubkey: source, isSigner: false, isWritable: true },\n    { pubkey: destination, isSigner: false, isWritable: true },\n    { pubkey: owner, isSigner: true, isWritable: false },\n  ];\n  return new TransactionInstruction({\n    keys,\n    data: encodeTokenInstructionData({\n      transfer: { amount },\n    }),\n    programId: TOKEN_PROGRAM_ID,\n  });\n}\n\nexport function mintTo({ mint, destination, amount, mintAuthority }) {\n  let keys = [\n    { pubkey: mint, isSigner: false, isWritable: true },\n    { pubkey: destination, isSigner: false, isWritable: true },\n    { pubkey: mintAuthority, isSigner: true, isWritable: false },\n  ];\n  return new TransactionInstruction({\n    keys,\n    data: encodeTokenInstructionData({\n      mintTo: {\n        amount,\n      },\n    }),\n    programId: TOKEN_PROGRAM_ID,\n  });\n}\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default function SolanaIcon() {\n  return (\n    <SvgIcon viewBox=\"0 0 450 450\">\n      <path d=\"m374.393945,136.203008c-2.518,2.519 -5.934,3.934 -9.496,3.934l-336.443,0c-11.891,0 -17.914,-14.315 -9.601,-22.817l55.186,-56.441c2.527,-2.584 5.988,-4.041 9.602,-4.041l337.697,0c11.964,0 17.955,14.465 9.496,22.925l-56.441,56.44z\" />\n      <path d=\"m374.393945,392.628008c-2.518,2.518 -5.934,3.933 -9.496,3.933l-336.443,0c-11.891,0 -17.914,-14.315 -9.601,-22.817l55.186,-56.441c2.527,-2.584 5.988,-4.041 9.602,-4.041l337.697,0c11.964,0 17.955,14.465 9.496,22.925l-56.441,56.441z\" />\n      <path d=\"m374.393945,188.933008c-2.518,-2.518 -5.934,-3.933 -9.496,-3.933l-336.443,0c-11.891,0 -17.914,14.315 -9.601,22.817l55.186,56.441c2.527,2.584 5.988,4.04 9.602,4.04l337.697,0c11.964,0 17.955,-14.464 9.496,-22.924l-56.441,-56.441z\" />\n    </SvgIcon>\n  );\n}\n","import React, { useState } from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useConnectionConfig } from '../utils/connection';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport { useWalletSelector } from '../utils/wallet';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AddIcon from '@material-ui/icons/Add';\nimport AccountIcon from '@material-ui/icons/AccountCircle';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport SolanaIcon from './SolanaIcon';\nimport CodeIcon from '@material-ui/icons/Code';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  button: {\n    marginLeft: theme.spacing(1),\n  },\n  menuItemIcon: {\n    minWidth: 32,\n  },\n}));\n\nexport default function NavigationFrame({ children }) {\n  const classes = useStyles();\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title} component=\"h1\">\n            Solana SPL Token Wallet\n          </Typography>\n          <WalletSelector />\n          <NetworkSelector />\n          <Hidden xsDown>\n            <Button\n              component=\"a\"\n              color=\"inherit\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              href=\"https://github.com/serum-foundation/spl-token-wallet\"\n              className={classes.button}\n            >\n              Source\n            </Button>\n          </Hidden>\n          <Hidden smUp>\n            <Tooltip title=\"View Source\" arrow>\n              <IconButton\n                component=\"a\"\n                color=\"inherit\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                href=\"https://github.com/serum-foundation/spl-token-wallet\"\n              >\n                <CodeIcon />\n              </IconButton>\n            </Tooltip>\n          </Hidden>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.content}>{children}</main>\n    </>\n  );\n}\n\nfunction NetworkSelector() {\n  const { endpoint, setEndpoint } = useConnectionConfig();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const classes = useStyles();\n\n  const networks = [\n    clusterApiUrl('mainnet-beta'),\n    clusterApiUrl('devnet'),\n    clusterApiUrl('testnet'),\n    'http://localhost:8899',\n  ];\n\n  const networkLabels = {\n    [clusterApiUrl('mainnet-beta')]: 'Mainnet Beta',\n    [clusterApiUrl('devnet')]: 'Devnet',\n    [clusterApiUrl('testnet')]: 'Testnet',\n  };\n\n  return (\n    <>\n      <Hidden xsDown>\n        <Button\n          color=\"inherit\"\n          onClick={(e) => setAnchorEl(e.target)}\n          className={classes.button}\n        >\n          {networkLabels[endpoint] ?? 'Network'}\n        </Button>\n      </Hidden>\n      <Hidden smUp>\n        <Tooltip title=\"Select Network\" arrow>\n          <IconButton color=\"inherit\" onClick={(e) => setAnchorEl(e.target)}>\n            <SolanaIcon />\n          </IconButton>\n        </Tooltip>\n      </Hidden>\n      <Menu\n        anchorEl={anchorEl}\n        open={!!anchorEl}\n        onClose={() => setAnchorEl(null)}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        getContentAnchorEl={null}\n      >\n        {networks.map((network) => (\n          <MenuItem\n            key={network}\n            onClick={() => {\n              setAnchorEl(null);\n              setEndpoint(network);\n            }}\n            selected={network === endpoint}\n          >\n            <ListItemIcon className={classes.menuItemIcon}>\n              {network === endpoint ? <CheckIcon fontSize=\"small\" /> : null}\n            </ListItemIcon>\n            {network}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n}\n\nfunction WalletSelector() {\n  const { addresses, walletIndex, setWalletIndex } = useWalletSelector();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const classes = useStyles();\n\n  if (addresses.length === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <Hidden xsDown>\n        <Button\n          color=\"inherit\"\n          onClick={(e) => setAnchorEl(e.target)}\n          className={classes.button}\n        >\n          Account\n        </Button>\n      </Hidden>\n      <Hidden smUp>\n        <Tooltip title=\"Select Account\" arrow>\n          <IconButton color=\"inherit\" onClick={(e) => setAnchorEl(e.target)}>\n            <AccountIcon />\n          </IconButton>\n        </Tooltip>\n      </Hidden>\n      <Menu\n        anchorEl={anchorEl}\n        open={!!anchorEl}\n        onClose={() => setAnchorEl(null)}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        getContentAnchorEl={null}\n      >\n        {addresses.map((address, index) => (\n          <MenuItem\n            key={address.toBase58()}\n            onClick={() => {\n              setAnchorEl(null);\n              setWalletIndex(index);\n            }}\n            selected={index === walletIndex}\n          >\n            <ListItemIcon className={classes.menuItemIcon}>\n              {index === walletIndex ? <CheckIcon fontSize=\"small\" /> : null}\n            </ListItemIcon>\n            {address.toBase58()}\n          </MenuItem>\n        ))}\n        <Divider />\n        <MenuItem\n          onClick={() => {\n            setAnchorEl(null);\n            setWalletIndex(addresses.length);\n          }}\n        >\n          <ListItemIcon className={classes.menuItemIcon}>\n            <AddIcon fontSize=\"small\" />\n          </ListItemIcon>\n          Create Account\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useEffectAfterTimeout } from '../utils/utils';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function LoadingIndicator({\n  height = null,\n  delay = 500,\n  ...rest\n}) {\n  const classes = useStyles();\n  const [visible, setVisible] = useState(false);\n\n  useEffectAfterTimeout(() => setVisible(true), delay);\n\n  let style = {};\n  if (height) {\n    style.height = height;\n  }\n\n  if (!visible) {\n    return height ? <div style={style} /> : null;\n  }\n\n  return (\n    <div className={classes.root} style={style} {...rest}>\n      <CircularProgress />\n    </div>\n  );\n}\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\n\nexport default function DialogForm({\n  open,\n  onClose,\n  onSubmit,\n  children,\n  ...rest\n}) {\n  return (\n    <Dialog\n      open={open}\n      PaperProps={{\n        component: 'form',\n        onSubmit: (e) => {\n          e.preventDefault();\n          if (onSubmit) {\n            onSubmit();\n          }\n        },\n      }}\n      onClose={onClose}\n      {...rest}\n    >\n      {children}\n    </Dialog>\n  );\n}\n","import React, { useRef } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport CopyIcon from 'mdi-material-ui/ContentCopy';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSnackbar } from 'notistack';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  button: {\n    marginLeft: theme.spacing(3),\n    whiteSpace: 'nowrap',\n    marginTop: theme.spacing(2),\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function CopyableDisplay({\n  value,\n  label,\n  autoFocus,\n  buttonProps,\n  helperText,\n}) {\n  const { enqueueSnackbar } = useSnackbar();\n  const textareaRef = useRef();\n  const classes = useStyles();\n  const copyLink = () => {\n    let textArea = textareaRef.current;\n    if (textArea) {\n      textArea.select();\n      document.execCommand('copy');\n      enqueueSnackbar(`Copied ${label}`, {\n        variant: 'info',\n        autoHideDuration: 2500,\n      });\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        inputRef={(ref) => (textareaRef.current = ref)}\n        multiline\n        autoFocus={autoFocus}\n        value={value}\n        readOnly\n        onFocus={(e) => e.currentTarget.select()}\n        className={classes.textArea}\n        fullWidth\n        helperText={helperText}\n        label={label}\n        spellCheck={false}\n      />\n      <Button\n        variant=\"contained\"\n        onClick={copyLink}\n        className={classes.button}\n        {...buttonProps}\n      >\n        <CopyIcon className={classes.buttonIcon} /> {'Copy'}\n      </Button>\n    </div>\n  );\n}\n","import { Typography } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport React from 'react';\nimport { useSolanaExplorerUrlSuffix } from '../utils/connection';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogForm from './DialogForm';\nimport { abbreviateAddress } from '../utils/utils';\nimport CopyableDisplay from './CopyableDisplay';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  explorerLink: {\n    marginBottom: theme.spacing(2),\n  },\n  warning: {\n    marginBottom: theme.spacing(2),\n  },\n  container: {\n    minWidth: 600,\n  },\n}));\n\nexport default function TokenInfoDialog({\n  open,\n  onClose,\n  publicKey,\n  balanceInfo,\n}) {\n  let { mint, tokenName, tokenSymbol } = balanceInfo;\n  const urlSuffix = useSolanaExplorerUrlSuffix();\n  const classes = useStyles();\n\n  return (\n    <DialogForm open={open} onClose={onClose}>\n      <DialogTitle>\n        {tokenName ?? abbreviateAddress(mint)}\n        {tokenSymbol ? ` (${tokenSymbol})` : null}\n      </DialogTitle>\n      <DialogContent className={classes.container}>\n        <Typography className={classes.warning}>\n          Information about {tokenName ?? abbreviateAddress(mint)}\n        </Typography>\n        <Typography variant=\"body2\" className={classes.explorerLink}>\n          <Link\n            href={\n              `https://explorer.solana.com/account/${publicKey.toBase58()}` +\n              urlSuffix\n            }\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            View on Solana Explorer\n          </Link>\n        </Typography>\n        {!!mint && (\n          <CopyableDisplay\n            value={mint.toBase58()}\n            label={'Token Mint Address'}\n            autoFocus\n            helperText={\n              <>\n                This is <strong>not</strong> your deposit address\n              </>\n            }\n          />\n        )}\n        {!!tokenName && (\n          <CopyableDisplay value={tokenName} label={'Token Name'} />\n        )}\n        {!!tokenSymbol && (\n          <CopyableDisplay value={tokenSymbol} label={'Token Symbol'} />\n        )}\n      </DialogContent>\n    </DialogForm>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useConnection, useSolanaExplorerUrlSuffix } from './connection';\nimport Button from '@material-ui/core/Button';\nimport { confirmTransaction } from './utils';\n\nexport function useSendTransaction() {\n  const connection = useConnection();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const [sending, setSending] = useState(false);\n\n  async function sendTransaction(\n    signaturePromise,\n    { onSuccess, onError } = {},\n  ) {\n    let id = enqueueSnackbar('Sending transaction...', {\n      variant: 'info',\n      persist: true,\n    });\n    setSending(true);\n    try {\n      let signature = await signaturePromise;\n      closeSnackbar(id);\n      id = enqueueSnackbar('Confirming transaction...', {\n        variant: 'info',\n        persist: true,\n        action: <ViewTransactionOnExplorerButton signature={signature} />,\n      });\n      await confirmTransaction(connection, signature);\n      closeSnackbar(id);\n      setSending(false);\n      enqueueSnackbar('Transaction confirmed', {\n        variant: 'success',\n        autoHideDuration: 15000,\n        action: <ViewTransactionOnExplorerButton signature={signature} />,\n      });\n      if (onSuccess) {\n        onSuccess(signature);\n      }\n    } catch (e) {\n      closeSnackbar(id);\n      setSending(false);\n      console.warn(e.message);\n      enqueueSnackbar(e.message, { variant: 'error' });\n      if (onError) {\n        onError(e);\n      }\n    }\n  }\n\n  return [sendTransaction, sending];\n}\n\nfunction ViewTransactionOnExplorerButton({ signature }) {\n  const urlSuffix = useSolanaExplorerUrlSuffix();\n  return (\n    <Button\n      color=\"inherit\"\n      component=\"a\"\n      target=\"_blank\"\n      rel=\"noopener\"\n      href={`https://explorer.solana.com/tx/${signature}` + urlSuffix}\n    >\n      View on Solana Explorer\n    </Button>\n  );\n}\n\nexport function useCallAsync() {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  return async function callAsync(\n    promise,\n    {\n      progressMessage = 'Submitting...',\n      successMessage = 'Success',\n      onSuccess,\n      onError,\n    } = {},\n  ) {\n    let id = enqueueSnackbar(progressMessage, {\n      variant: 'info',\n      persist: true,\n    });\n    try {\n      let result = await promise;\n      closeSnackbar(id);\n      if (successMessage) {\n        enqueueSnackbar(successMessage, { variant: 'success' });\n      }\n      if (onSuccess) {\n        onSuccess(result);\n      }\n    } catch (e) {\n      closeSnackbar(id);\n      enqueueSnackbar(e.message, { variant: 'error' });\n      if (onError) {\n        onError(e);\n      }\n    }\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport { refreshWalletPublicKeys, useWallet } from '../utils/wallet';\nimport { LAMPORTS_PER_SOL, PublicKey } from '@solana/web3.js';\nimport { useUpdateTokenName } from '../utils/tokens/names';\nimport { useAsyncData } from '../utils/fetch-loop';\nimport LoadingIndicator from './LoadingIndicator';\nimport { Tab, Tabs, makeStyles } from '@material-ui/core';\nimport { useSendTransaction } from '../utils/notifications';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { abbreviateAddress } from '../utils/utils';\nimport { TOKENS } from '../utils/tokens/names';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport {\n  useConnectionConfig,\n  useSolanaExplorerUrlSuffix,\n} from '../utils/connection';\nimport Link from '@material-ui/core/Link';\nimport CopyableDisplay from './CopyableDisplay';\n\nconst feeFormat = new Intl.NumberFormat(undefined, {\n  minimumFractionDigits: 6,\n  maximumFractionDigits: 6,\n});\n\nconst useStyles = makeStyles((theme) => ({\n  tabs: {\n    marginBottom: theme.spacing(1),\n    borderBottom: `1px solid ${theme.palette.background.paper}`,\n    width: '100%',\n  },\n}));\n\nexport default function AddTokenDialog({ open, onClose }) {\n  let wallet = useWallet();\n  let [tokenAccountCost] = useAsyncData(\n    wallet.tokenAccountCost,\n    wallet.tokenAccountCost,\n  );\n  let classes = useStyles();\n  let updateTokenName = useUpdateTokenName();\n\n  let [mintAddress, setMintAddress] = useState('');\n  let [tokenName, setTokenName] = useState('');\n  let [tokenSymbol, setTokenSymbol] = useState('');\n  let [sendTransaction, sending] = useSendTransaction();\n  const { endpoint } = useConnectionConfig();\n  const popularTokens = TOKENS[endpoint];\n  const [tab, setTab] = useState(!!popularTokens ? 'popular' : 'manual');\n\n  useEffect(() => {\n    if (!popularTokens) {\n      setTab('manual');\n    }\n  }, [popularTokens]);\n\n  function onSubmit({ mintAddress, tokenName, tokenSymbol }) {\n    let mint = new PublicKey(mintAddress);\n    sendTransaction(wallet.createTokenAccount(mint), {\n      onSuccess: () => {\n        updateTokenName(mint, tokenName, tokenSymbol);\n        refreshWalletPublicKeys(wallet);\n        onClose();\n      },\n    });\n  }\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Add Token</DialogTitle>\n      <DialogContent>\n        {tokenAccountCost ? (\n          <DialogContentText>\n            Add a token to your wallet. This will cost{' '}\n            {feeFormat.format(tokenAccountCost / LAMPORTS_PER_SOL)} Solana.\n          </DialogContentText>\n        ) : (\n          <LoadingIndicator />\n        )}\n        {!!popularTokens && (\n          <Tabs\n            value={tab}\n            variant=\"standard\"\n            textColor=\"primary\"\n            indicatorColor=\"primary\"\n            className={classes.tabs}\n            onChange={(e, value) => setTab(value)}\n          >\n            <Tab\n              label={'Popular Tokens'}\n              value=\"popular\"\n              style={{ textDecoration: 'none', width: '50%' }}\n            />\n            <Tab\n              label={'Manual Input'}\n              value=\"manual\"\n              style={{ textDecoration: 'none', width: '50%' }}\n            />\n          </Tabs>\n        )}\n        {tab === 'manual' || !popularTokens ? (\n          <React.Fragment>\n            <TextField\n              label=\"Token Mint Address\"\n              fullWidth\n              variant=\"outlined\"\n              margin=\"normal\"\n              value={mintAddress}\n              onChange={(e) => setMintAddress(e.target.value)}\n            />\n            <TextField\n              label=\"Token Name\"\n              fullWidth\n              variant=\"outlined\"\n              margin=\"normal\"\n              value={tokenName}\n              onChange={(e) => setTokenName(e.target.value)}\n            />\n            <TextField\n              label=\"Token Symbol\"\n              fullWidth\n              variant=\"outlined\"\n              margin=\"normal\"\n              value={tokenSymbol}\n              onChange={(e) => setTokenSymbol(e.target.value)}\n            />\n          </React.Fragment>\n        ) : (\n          <List disablePadding>\n            {popularTokens.map((token) => (\n              <TokenListItem\n                key={token.mintAddress}\n                {...token}\n                onSubmit={onSubmit}\n                disalbed={sending}\n              />\n            ))}\n          </List>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        {tab === 'manual' && (\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            disabled={sending}\n            onClick={() => onSubmit({ tokenName, tokenSymbol, mintAddress })}\n          >\n            Add\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction TokenListItem({\n  tokenName,\n  tokenSymbol,\n  mintAddress,\n  onSubmit,\n  disabled,\n}) {\n  const [open, setOpen] = useState(false);\n  const urlSuffix = useSolanaExplorerUrlSuffix();\n  const alreadyExists = false; // TODO\n  return (\n    <React.Fragment>\n      <div style={{ display: 'flex' }} key={tokenName}>\n        <ListItem button onClick={() => setOpen((open) => !open)}>\n          <ListItemText\n            primary={\n              <Link\n                target=\"_blank\"\n                rel=\"noopener\"\n                href={\n                  `https://explorer.solana.com/account/${mintAddress}` +\n                  urlSuffix\n                }\n              >\n                {tokenName ?? abbreviateAddress(mintAddress)}\n                {tokenSymbol ? ` (${tokenSymbol})` : null}\n              </Link>\n            }\n          />\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Button\n          type=\"submit\"\n          color=\"primary\"\n          disabled={disabled || alreadyExists}\n          onClick={() => onSubmit({ tokenName, tokenSymbol, mintAddress })}\n        >\n          {alreadyExists ? 'Added' : 'Add'}\n        </Button>\n      </div>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <CopyableDisplay\n          value={mintAddress}\n          label={`${tokenSymbol} Mint Address`}\n        />\n      </Collapse>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogForm from './DialogForm';\nimport { useWallet } from '../utils/wallet';\nimport { PublicKey } from '@solana/web3.js';\nimport { abbreviateAddress } from '../utils/utils';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { useSendTransaction } from '../utils/notifications';\n\nexport default function SendDialog({ open, onClose, publicKey, balanceInfo }) {\n  const wallet = useWallet();\n  const [destinationAddress, setDestinationAddress] = useState('');\n  const [transferAmountString, setTransferAmountString] = useState('');\n  const [sendTransaction, sending] = useSendTransaction();\n\n  let {\n    amount: balanceAmount,\n    decimals,\n    mint,\n    tokenName,\n    tokenSymbol,\n  } = balanceInfo;\n\n  function onSubmit() {\n    let amount = Math.round(\n      parseFloat(transferAmountString) * Math.pow(10, decimals),\n    );\n    if (!amount || amount <= 0) {\n      throw new Error('Invalid amount');\n    }\n    sendTransaction(\n      wallet.transferToken(\n        publicKey,\n        new PublicKey(destinationAddress),\n        amount,\n      ),\n      { onSuccess: onClose },\n    );\n  }\n\n  return (\n    <DialogForm open={open} onClose={onClose} onSubmit={onSubmit}>\n      <DialogTitle>\n        Send {tokenName ?? abbreviateAddress(mint)}\n        {tokenSymbol ? ` (${tokenSymbol})` : null}\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"Recipient Address\"\n          fullWidth\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={destinationAddress}\n          onChange={(e) => setDestinationAddress(e.target.value.trim())}\n        />\n        <TextField\n          label=\"Amount\"\n          fullWidth\n          variant=\"outlined\"\n          margin=\"normal\"\n          type=\"number\"\n          InputProps={{\n            endAdornment: tokenSymbol ? (\n              <InputAdornment position=\"end\">{tokenSymbol}</InputAdornment>\n            ) : null,\n            inputProps: {\n              step: Math.pow(10, -decimals),\n            },\n          }}\n          value={transferAmountString}\n          onChange={(e) => setTransferAmountString(e.target.value.trim())}\n          helperText={`Max: ${balanceAmount / Math.pow(10, decimals)}`}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button type=\"submit\" color=\"primary\" disabled={sending}>\n          Send\n        </Button>\n      </DialogActions>\n    </DialogForm>\n  );\n}\n","import React from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogForm from './DialogForm';\nimport { abbreviateAddress } from '../utils/utils';\nimport { Button, Typography } from '@material-ui/core';\nimport CopyableDisplay from './CopyableDisplay';\nimport { makeStyles } from '@material-ui/core/styles';\nimport QrcodeIcon from 'mdi-material-ui/Qrcode';\nimport QRCode from 'qrcode.react';\n\nexport default function DepositDialog({\n  open,\n  onClose,\n  publicKey,\n  balanceInfo,\n}) {\n  let { mint, tokenName, tokenSymbol, owner } = balanceInfo;\n\n  return (\n    <DialogForm open={open} onClose={onClose}>\n      <DialogTitle>\n        Deposit {tokenName ?? abbreviateAddress(mint)}\n        {tokenSymbol ? ` (${tokenSymbol})` : null}\n      </DialogTitle>\n      <DialogContent>\n        {publicKey.equals(owner) ? (\n          <Typography>\n            This address can only be used to receive SOL. Do not send other\n            tokens to this address.\n          </Typography>\n        ) : (\n          <Typography>\n            This address can only be used to receive {tokenSymbol}. Do not send\n            SOL to this address.\n          </Typography>\n        )}\n        <CopyableDisplay\n          value={publicKey.toBase58()}\n          label={'Deposit Address'}\n          autoFocus\n        />\n        <Qrcode value={publicKey.toBase58()} />\n      </DialogContent>\n    </DialogForm>\n  );\n}\n\nconst useQrCodeStyles = makeStyles((theme) => ({\n  qrcodeButton: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  qrcodeIcon: {\n    marginRight: theme.spacing(1),\n  },\n  qrcodeContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nfunction Qrcode({ value }) {\n  const [showQrcode, setShowQrcode] = React.useState(false);\n\n  const classes = useQrCodeStyles();\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        onClick={() => setShowQrcode(!showQrcode)}\n        className={classes.qrcodeButton}\n      >\n        <QrcodeIcon className={classes.qrcodeIcon} />\n        {showQrcode ? 'Hide QR Code' : 'Show QR Code'}\n      </Button>\n      {showQrcode && (\n        <div className={classes.qrcodeContainer}>\n          <QRCode value={value} size={256} includeMargin />\n        </div>\n      )}\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  refreshWalletPublicKeys,\n  useBalanceInfo,\n  useWallet,\n  useWalletPublicKeys,\n} from '../utils/wallet';\nimport LoadingIndicator from './LoadingIndicator';\nimport Collapse from '@material-ui/core/Collapse';\nimport { Typography } from '@material-ui/core';\nimport TokenInfoDialog from './TokenInfoDialog';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { abbreviateAddress } from '../utils/utils';\nimport Button from '@material-ui/core/Button';\nimport SendIcon from '@material-ui/icons/Send';\nimport ReceiveIcon from '@material-ui/icons/WorkOutline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AddIcon from '@material-ui/icons/Add';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddTokenDialog from './AddTokenDialog';\nimport SendDialog from './SendDialog';\nimport DepositDialog from './DepositDialog';\nimport { refreshAccountInfo } from '../utils/connection';\n\nconst balanceFormat = new Intl.NumberFormat(undefined, {\n  minimumFractionDigits: 4,\n  maximumFractionDigits: 4,\n  useGrouping: true,\n});\n\nexport default function BalancesList() {\n  const wallet = useWallet();\n  const [publicKeys, loaded] = useWalletPublicKeys();\n  const [showAddTokenDialog, setShowAddTokenDialog] = useState(false);\n\n  return (\n    <Paper>\n      <AppBar position=\"static\" color=\"default\" elevation={1}>\n        <Toolbar>\n          <Typography variant=\"h6\" style={{ flexGrow: 1 }} component=\"h2\">\n            Balances\n          </Typography>\n          <Tooltip title=\"Add Token\" arrow>\n            <IconButton onClick={() => setShowAddTokenDialog(true)}>\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Refresh\" arrow>\n            <IconButton\n              onClick={() => {\n                refreshWalletPublicKeys(wallet);\n                publicKeys.map((publicKey) =>\n                  refreshAccountInfo(wallet.connection, publicKey, true),\n                );\n              }}\n              style={{ marginRight: -12 }}\n            >\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </AppBar>\n      <List disablePadding>\n        {publicKeys.map((publicKey) => (\n          <BalanceListItem key={publicKey.toBase58()} publicKey={publicKey} />\n        ))}\n        {loaded ? null : <LoadingIndicator />}\n      </List>\n      <AddTokenDialog\n        open={showAddTokenDialog}\n        onClose={() => setShowAddTokenDialog(false)}\n      />\n    </Paper>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  address: {\n    textOverflow: 'ellipsis',\n    overflowX: 'hidden',\n  },\n  itemDetails: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction BalanceListItem({ publicKey }) {\n  const balanceInfo = useBalanceInfo(publicKey);\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [sendDialogOpen, setSendDialogOpen] = useState(false);\n  const [depositDialogOpen, setDepositDialogOpen] = useState(false);\n  const [tokenInfoDialogOpen, setTokenInfoDialogOpen] = useState(false);\n\n  if (!balanceInfo) {\n    return <LoadingIndicator delay={0} />;\n  }\n\n  let { amount, decimals, mint, tokenName, tokenSymbol, owner } = balanceInfo;\n\n  return (\n    <>\n      <ListItem button onClick={() => setOpen((open) => !open)}>\n        <ListItemText\n          primary={\n            <>\n              {balanceFormat.format(amount / Math.pow(10, decimals))}{' '}\n              {tokenName ?? abbreviateAddress(mint)}\n              {tokenSymbol ? ` (${tokenSymbol})` : null}\n            </>\n          }\n          secondary={publicKey.toBase58()}\n          secondaryTypographyProps={{ className: classes.address }}\n        />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <div className={classes.itemDetails}>\n          <div className={classes.buttonContainer}>\n            {!publicKey.equals(owner) && (\n              <Button\n                variant=\"outlined\"\n                color=\"inherit\"\n                startIcon={<InfoIcon />}\n                onClick={() => setTokenInfoDialogOpen(true)}\n              >\n                Token Info\n              </Button>\n            )}\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              startIcon={<ReceiveIcon />}\n              onClick={() => setDepositDialogOpen(true)}\n            >\n              Receive\n            </Button>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              startIcon={<SendIcon />}\n              onClick={() => setSendDialogOpen(true)}\n            >\n              Send\n            </Button>\n          </div>\n        </div>\n      </Collapse>\n      <SendDialog\n        open={sendDialogOpen}\n        onClose={() => setSendDialogOpen(false)}\n        balanceInfo={balanceInfo}\n        publicKey={publicKey}\n      />\n      <DepositDialog\n        open={depositDialogOpen}\n        onClose={() => setDepositDialogOpen(false)}\n        balanceInfo={balanceInfo}\n        publicKey={publicKey}\n      />\n      <TokenInfoDialog\n        open={tokenInfoDialogOpen}\n        onClose={() => setTokenInfoDialogOpen(false)}\n        balanceInfo={balanceInfo}\n        publicKey={publicKey}\n      />\n    </>\n  );\n}\n","import {\n  refreshWalletPublicKeys,\n  useBalanceInfo,\n  useWallet,\n} from '../utils/wallet';\nimport { useUpdateTokenName } from '../utils/tokens/names';\nimport { useCallAsync, useSendTransaction } from '../utils/notifications';\nimport { Account, clusterApiUrl, LAMPORTS_PER_SOL } from '@solana/web3.js';\nimport { abbreviateAddress, sleep } from '../utils/utils';\nimport { refreshAccountInfo, useConnectionConfig } from '../utils/connection';\nimport { createAndInitializeMint } from '../utils/tokens';\nimport { Tooltip, Button } from '@material-ui/core';\nimport React from 'react';\n\nexport default function DebugButtons() {\n  const wallet = useWallet();\n  const updateTokenName = useUpdateTokenName();\n  const { endpoint } = useConnectionConfig();\n  const balanceInfo = useBalanceInfo(wallet.account.publicKey);\n  const [sendTransaction, sending] = useSendTransaction();\n  const callAsync = useCallAsync();\n\n  let { amount } = balanceInfo || {};\n\n  function requestAirdrop() {\n    callAsync(\n      wallet.connection.requestAirdrop(\n        wallet.account.publicKey,\n        LAMPORTS_PER_SOL,\n      ),\n      {\n        onSuccess: async () => {\n          await sleep(5000);\n          refreshAccountInfo(wallet.connection, wallet.account.publicKey);\n        },\n        successMessage:\n          'Success! Please wait up to 30 seconds for the SOL tokens to appear in your wallet.',\n      },\n    );\n  }\n\n  function mintTestToken() {\n    let mint = new Account();\n    updateTokenName(\n      mint.publicKey,\n      `Test Token ${abbreviateAddress(mint.publicKey)}`,\n      `TEST${mint.publicKey.toBase58().slice(0, 2)}`,\n    );\n    sendTransaction(\n      createAndInitializeMint({\n        connection: wallet.connection,\n        owner: wallet.account,\n        mint,\n        amount: 1000,\n        decimals: 2,\n        initialAccount: new Account(),\n      }),\n      { onSuccess: () => refreshWalletPublicKeys(wallet) },\n    );\n  }\n\n  const noSol = amount === 0;\n  const requestAirdropDisabled = endpoint === clusterApiUrl('mainnet-beta');\n  return (\n    <div style={{ display: 'flex' }}>\n      <Tooltip\n        title={\n          requestAirdropDisabled\n            ? 'Receive some devnet SOL for free. Only enabled on the devnet'\n            : 'Receive some devnet SOL for free'\n        }\n      >\n        <span>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={requestAirdrop}\n            disabled={requestAirdropDisabled}\n          >\n            Request Airdrop\n          </Button>\n        </span>\n      </Tooltip>\n      <Tooltip\n        title={\n          noSol\n            ? 'Generate and receive balances in a new test token. Requires SOL balance'\n            : 'Generate and receive balances in a new test token'\n        }\n      >\n        <span>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={mintTestToken}\n            disabled={sending || noSol}\n            style={{ marginLeft: 24 }}\n          >\n            Mint Test Token\n          </Button>\n        </span>\n      </Tooltip>\n    </div>\n  );\n}\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport BalancesList from '../components/BalancesList';\nimport Grid from '@material-ui/core/Grid';\nimport { useIsProdNetwork } from '../utils/connection';\nimport DebugButtons from '../components/DebugButtons';\n\nexport default function WalletPage() {\n  const isProdNetwork = useIsProdNetwork();\n  return (\n    <Container fixed maxWidth=\"md\">\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <BalancesList />\n        </Grid>\n        {isProdNetwork ? null : (\n          <Grid item xs={12}>\n            <DebugButtons />\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useWallet } from '../utils/wallet';\nimport { Typography } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport { makeStyles } from '@material-ui/core/styles';\nimport assert from 'assert';\nimport bs58 from 'bs58';\nimport nacl from 'tweetnacl';\n\nexport default function PopupPage({ opener }) {\n  const wallet = useWallet();\n\n  const origin = useMemo(() => {\n    let params = new URLSearchParams(window.location.hash.slice(1));\n    return params.get('origin');\n  }, []);\n  const postMessage = useCallback(\n    (message) => {\n      opener.postMessage({ jsonrpc: '2.0', ...message }, origin);\n    },\n    [opener, origin],\n  );\n\n  const [connectedAccount, setConnectedAccount] = useState(null);\n  const hasConnectedAccount = !!connectedAccount;\n  const [requests, setRequests] = useState([]);\n\n  // Send a disconnect event if this window is closed, this component is\n  // unmounted, or setConnectedAccount(null) is called.\n  useEffect(() => {\n    if (hasConnectedAccount) {\n      function unloadHandler() {\n        postMessage({ method: 'disconnected' });\n      }\n      window.addEventListener('beforeunload', unloadHandler);\n      return () => {\n        unloadHandler();\n        window.removeEventListener('beforeunload', unloadHandler);\n      };\n    }\n  }, [hasConnectedAccount, postMessage]);\n\n  // Disconnect if the user switches to a different wallet.\n  useEffect(() => {\n    if (\n      connectedAccount &&\n      !connectedAccount.publicKey.equals(wallet.publicKey)\n    ) {\n      setConnectedAccount(null);\n    }\n  }, [connectedAccount, wallet]);\n\n  // Push requests from the parent window into a queue.\n  useEffect(() => {\n    function messageHandler(e) {\n      if (e.origin === origin && e.source === window.opener) {\n        if (e.data.method !== 'signTransaction') {\n          postMessage({ error: 'Unsupported method', id: e.data.id });\n        }\n        setRequests((requests) => [...requests, e.data]);\n      }\n    }\n    window.addEventListener('message', messageHandler);\n    return () => window.removeEventListener('message', messageHandler);\n  }, [origin, postMessage]);\n\n  if (\n    !connectedAccount ||\n    !connectedAccount.publicKey.equals(wallet.publicKey)\n  ) {\n    // Approve the parent page to connect to this wallet.\n    function connect() {\n      setConnectedAccount(wallet.account);\n      postMessage({\n        method: 'connected',\n        params: { publicKey: wallet.publicKey.toBase58() },\n      });\n      focusParent();\n    }\n\n    return <ApproveConnectionForm origin={origin} onApprove={connect} />;\n  }\n\n  if (requests.length > 0) {\n    const request = requests[0];\n    assert(request.method === 'signTransaction');\n    const message = bs58.decode(request.params.message);\n\n    function sendSignature() {\n      setRequests((requests) => requests.slice(1));\n      postMessage({\n        result: {\n          signature: bs58.encode(\n            nacl.sign.detached(message, wallet.account.secretKey),\n          ),\n          publicKey: wallet.publicKey.toBase58(),\n        },\n        id: request.id,\n      });\n      if (requests.length === 1) {\n        focusParent();\n      }\n    }\n\n    function sendReject() {\n      setRequests((requests) => requests.slice(1));\n      postMessage({\n        error: 'Transaction cancelled',\n        id: request.id,\n      });\n      if (requests.length === 1) {\n        focusParent();\n      }\n    }\n\n    return (\n      <ApproveSignatureForm\n        origin={origin}\n        message={message}\n        onApprove={sendSignature}\n        onReject={sendReject}\n      />\n    );\n  }\n\n  return (\n    <Typography>Please keep this window open in the background.</Typography>\n  );\n}\n\n/**\n * Switch focus to the parent window. This requires that the parent runs\n * `window.name = 'parent'` before opening the popup.\n */\nfunction focusParent() {\n  window.open('', 'parent');\n}\n\nconst useStyles = makeStyles((theme) => ({\n  connection: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    textAlign: 'center',\n  },\n  transaction: {\n    wordBreak: 'break-all',\n  },\n  actions: {\n    justifyContent: 'space-between',\n  },\n}));\n\nfunction ApproveConnectionForm({ origin, onApprove }) {\n  const wallet = useWallet();\n  const classes = useStyles();\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" component=\"h1\" gutterBottom>\n          Allow this site to access your Solana account?\n        </Typography>\n        <div className={classes.connection}>\n          <Typography>{origin}</Typography>\n          <ImportExportIcon fontSize=\"large\" />\n          <Typography>{wallet.publicKey.toBase58()}</Typography>\n        </div>\n        <Typography>Only connect with sites you trust.</Typography>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button onClick={window.close}>Cancel</Button>\n        <Button color=\"primary\" onClick={onApprove}>\n          Connect\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nfunction ApproveSignatureForm({ origin, message, onApprove, onReject }) {\n  const classes = useStyles();\n\n  // TODO: decode message\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" component=\"h1\" gutterBottom>\n          {origin} would like to send the following transaction:\n        </Typography>\n        <Typography className={classes.transaction}>\n          {bs58.encode(message)}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button onClick={onReject}>Cancel</Button>\n        <Button color=\"primary\" onClick={onApprove}>\n          Approve\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  generateMnemonicAndSeed,\n  hasLockedMnemonicAndSeed,\n  loadMnemonicAndSeed,\n  mnemonicToSeed,\n  storeMnemonicAndSeed,\n} from '../utils/wallet-seed';\nimport Container from '@material-ui/core/Container';\nimport LoadingIndicator from '../components/LoadingIndicator';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport { useCallAsync } from '../utils/notifications';\nimport Link from '@material-ui/core/Link';\n\nexport default function LoginPage() {\n  const [restore, setRestore] = useState(false);\n  return (\n    <Container maxWidth=\"sm\">\n      {restore ? (\n        <RestoreWalletForm goBack={() => setRestore(false)} />\n      ) : (\n        <>\n          {hasLockedMnemonicAndSeed() ? <LoginForm /> : <CreateWalletForm />}\n          <br />\n          <Link style={{ cursor: 'pointer' }} onClick={() => setRestore(true)}>\n            Restore existing wallet\n          </Link>\n        </>\n      )}\n    </Container>\n  );\n}\n\nfunction CreateWalletForm() {\n  const [mnemonicAndSeed, setMnemonicAndSeed] = useState(null);\n  useEffect(() => {\n    generateMnemonicAndSeed().then(setMnemonicAndSeed);\n  }, []);\n  const [savedWords, setSavedWords] = useState(false);\n  const callAsync = useCallAsync();\n\n  function submit(password) {\n    const { mnemonic, seed } = mnemonicAndSeed;\n    callAsync(storeMnemonicAndSeed(mnemonic, seed, password), {\n      progressMessage: 'Creating wallet...',\n      successMessage: 'Wallet created',\n    });\n  }\n\n  if (!savedWords) {\n    return (\n      <SeedWordsForm\n        mnemonicAndSeed={mnemonicAndSeed}\n        goForward={() => setSavedWords(true)}\n      />\n    );\n  }\n\n  return (\n    <ChoosePasswordForm\n      mnemonicAndSeed={mnemonicAndSeed}\n      goBack={() => setSavedWords(false)}\n      onSubmit={submit}\n    />\n  );\n}\n\nfunction SeedWordsForm({ mnemonicAndSeed, goForward }) {\n  const [confirmed, setConfirmed] = useState(false);\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" gutterBottom>\n          Create New Wallet\n        </Typography>\n        <Typography paragraph>\n          Create a new wallet to hold Solana and SPL tokens.\n        </Typography>\n        <Typography>\n          Please write down the following twelve words and keep them in a safe\n          place:\n        </Typography>\n        {mnemonicAndSeed ? (\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            multiline\n            margin=\"normal\"\n            value={mnemonicAndSeed.mnemonic}\n            label=\"Seed Words\"\n            onFocus={(e) => e.currentTarget.select()}\n          />\n        ) : (\n          <LoadingIndicator />\n        )}\n        <Typography paragraph>\n          Your private keys are only stored on your current computer or device.\n          You will need these words to restore your wallet if your browser's\n          storage is cleared or your device is damaged or lost.\n        </Typography>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={confirmed}\n              disabled={!mnemonicAndSeed}\n              onChange={(e) => setConfirmed(e.target.checked)}\n            />\n          }\n          label=\"I have saved these words in a safe place.\"\n        />\n      </CardContent>\n      <CardActions style={{ justifyContent: 'flex-end' }}>\n        <Button color=\"primary\" disabled={!confirmed} onClick={goForward}>\n          Continue\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nfunction ChoosePasswordForm({ goBack, onSubmit }) {\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" gutterBottom>\n          Choose a Password (Optional)\n        </Typography>\n        <Typography>\n          Optionally pick a password to protect your wallet.\n        </Typography>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          label=\"New Password\"\n          type=\"password\"\n          autoComplete=\"new-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          label=\"Confirm Password\"\n          type=\"password\"\n          autoComplete=\"new-password\"\n          value={passwordConfirm}\n          onChange={(e) => setPasswordConfirm(e.target.value)}\n        />\n        <Typography>\n          If you forget your password you will need to restore your wallet using\n          your seed words.\n        </Typography>\n      </CardContent>\n      <CardActions style={{ justifyContent: 'space-between' }}>\n        <Button onClick={goBack}>Back</Button>\n        <Button\n          color=\"primary\"\n          disabled={password !== passwordConfirm}\n          onClick={() => onSubmit(password)}\n        >\n          Create Wallet\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nfunction LoginForm() {\n  const [password, setPassword] = useState('');\n  const [stayLoggedIn, setStayLoggedIn] = useState(false);\n  const callAsync = useCallAsync();\n\n  function submit() {\n    callAsync(loadMnemonicAndSeed(password, stayLoggedIn), {\n      progressMessage: 'Unlocking wallet...',\n      successMessage: 'Wallet unlocked',\n    });\n  }\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" gutterBottom>\n          Unlock Wallet\n        </Typography>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={stayLoggedIn}\n              onChange={(e) => setStayLoggedIn(e.target.checked)}\n            />\n          }\n          label=\"Keep wallet unlocked\"\n        />\n      </CardContent>\n      <CardActions style={{ justifyContent: 'flex-end' }}>\n        <Button color=\"primary\" onClick={submit}>\n          Unlock\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nfunction RestoreWalletForm({ goBack }) {\n  const [mnemonic, setMnemonic] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const callAsync = useCallAsync();\n\n  function submit() {\n    callAsync(\n      mnemonicToSeed(mnemonic).then((seed) =>\n        storeMnemonicAndSeed(mnemonic, seed, password),\n      ),\n    );\n  }\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" gutterBottom>\n          Restore Existing Wallet\n        </Typography>\n        <Typography>\n          Restore your wallet using your twelve seed words. Note that this will\n          delete any existing wallet on this device.\n        </Typography>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          multiline\n          rows={3}\n          margin=\"normal\"\n          label=\"Seed Words\"\n          value={mnemonic}\n          onChange={(e) => setMnemonic(e.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          label=\"New Password (Optional)\"\n          type=\"password\"\n          autoComplete=\"new-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          label=\"Confirm Password\"\n          type=\"password\"\n          autoComplete=\"new-password\"\n          value={passwordConfirm}\n          onChange={(e) => setPasswordConfirm(e.target.value)}\n        />\n      </CardContent>\n      <CardActions style={{ justifyContent: 'space-between' }}>\n        <Button onClick={goBack}>Cancel</Button>\n        <Button\n          color=\"primary\"\n          disabled={password !== passwordConfirm}\n          onClick={submit}\n        >\n          Restore\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { Suspense } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {\n  ThemeProvider,\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n} from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport NavigationFrame from './components/NavigationFrame';\nimport { ConnectionProvider } from './utils/connection';\nimport WalletPage from './pages/WalletPage';\nimport { useWallet, WalletProvider } from './utils/wallet';\nimport LoadingIndicator from './components/LoadingIndicator';\nimport { SnackbarProvider } from 'notistack';\nimport PopupPage from './pages/PopupPage';\nimport LoginPage from './pages/LoginPage';\n\nexport default function App() {\n  // TODO: add toggle for dark mode\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: blue,\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  // Disallow rendering inside an iframe to prevent clickjacking.\n  if (window.self !== window.top) {\n    return null;\n  }\n\n  return (\n    <Suspense fallback={<LoadingIndicator />}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <ConnectionProvider>\n          <WalletProvider>\n            <SnackbarProvider maxSnack={5} autoHideDuration={8000}>\n              <NavigationFrame>\n                <Suspense fallback={<LoadingIndicator />}>\n                  <PageContents />\n                </Suspense>\n              </NavigationFrame>\n            </SnackbarProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ThemeProvider>\n    </Suspense>\n  );\n}\n\nfunction PageContents() {\n  const wallet = useWallet();\n  if (!wallet) {\n    return <LoginPage />;\n  }\n  if (window.opener) {\n    return <PopupPage opener={window.opener} />;\n  }\n  return <WalletPage />;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import * as BufferLayout from 'buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(44),\n  BufferLayout.u8('decimals'),\n  BufferLayout.blob(37),\n]);\n\nexport function parseTokenAccountData(data) {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport function parseMintData(data) {\n  let { decimals } = MINT_LAYOUT.decode(data);\n  return { decimals };\n}\n\nexport function getOwnedAccountsFilters(publicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n","import assert from 'assert';\nimport { useEffect, useReducer } from 'react';\n\nconst pageLoadTime = new Date();\n\nconst globalCache = new Map();\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener(listener) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal(listener.cacheKey, listener.fn),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener(listener) {\n    let loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nclass FetchLoopListener {\n  constructor(cacheKey, fn, refreshInterval, callback) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.callback = callback;\n  }\n}\n\nclass FetchLoopInternal {\n  constructor(cacheKey, fn) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n  }\n\n  get refreshInterval() {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get stopped() {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener) {\n    let previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener) {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners() {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    try {\n      let data = await this.fn();\n      globalCache.set(this.cacheKey, data);\n      this.errors = 0;\n      this.notifyListeners();\n      return data;\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * Math.pow(2, this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        let timeSincePageLoad = new Date() - pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nexport function useAsyncData(\n  asyncFn,\n  cacheKey,\n  { refreshInterval = 60000 } = {},\n) {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      return () => {};\n    }\n    const listener = new FetchLoopListener(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      rerender,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return null;\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey, clearCache = false) {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function setCache(cacheKey, value, { initializeOnly = false } = {}) {\n  if (!initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import { pbkdf2 } from 'crypto';\nimport { randomBytes, secretbox } from 'tweetnacl';\nimport bs58 from 'bs58';\nimport { EventEmitter } from 'events';\n\nexport async function generateMnemonicAndSeed() {\n  const bip39 = await import('bip39');\n  const mnemonic = bip39.generateMnemonic(128);\n  const seed = await bip39.mnemonicToSeed(mnemonic);\n  return { mnemonic, seed: Buffer.from(seed).toString('hex') };\n}\n\nexport async function mnemonicToSeed(mnemonic) {\n  const bip39 = await import('bip39');\n  if (!bip39.validateMnemonic(mnemonic)) {\n    throw new Error('Invalid seed words');\n  }\n  const seed = await bip39.mnemonicToSeed(mnemonic);\n  return Buffer.from(seed).toString('hex');\n}\n\nlet unlockedMnemonicAndSeed = JSON.parse(\n  sessionStorage.getItem('unlocked') ||\n    localStorage.getItem('unlocked') ||\n    'null',\n) || { mnemonic: null, seed: null };\nexport const walletSeedChanged = new EventEmitter();\n\nexport function getUnlockedMnemonicAndSeed() {\n  return unlockedMnemonicAndSeed;\n}\n\nexport function hasLockedMnemonicAndSeed() {\n  return !!localStorage.getItem('locked');\n}\n\nfunction setUnlockedMnemonicAndSeed(mnemonic, seed) {\n  unlockedMnemonicAndSeed = { mnemonic, seed };\n  walletSeedChanged.emit('change', unlockedMnemonicAndSeed);\n}\n\nexport async function storeMnemonicAndSeed(mnemonic, seed, password) {\n  const plaintext = JSON.stringify({ mnemonic, seed });\n  if (password) {\n    const salt = randomBytes(16);\n    const kdf = 'pbkdf2';\n    const iterations = 100000;\n    const digest = 'sha256';\n    const key = await deriveEncryptionKey(password, salt, iterations, digest);\n    const nonce = randomBytes(secretbox.nonceLength);\n    const encrypted = secretbox(Buffer.from(plaintext), nonce, key);\n    localStorage.setItem(\n      'locked',\n      JSON.stringify({\n        encrypted: bs58.encode(encrypted),\n        nonce: bs58.encode(nonce),\n        kdf,\n        salt: bs58.encode(salt),\n        iterations,\n        digest,\n      }),\n    );\n    localStorage.removeItem('unlocked');\n    sessionStorage.removeItem('unlocked');\n  } else {\n    localStorage.setItem('unlocked', plaintext);\n    localStorage.removeItem('locked');\n    sessionStorage.removeItem('unlocked');\n  }\n  setUnlockedMnemonicAndSeed(mnemonic, seed);\n}\n\nexport async function loadMnemonicAndSeed(password, stayLoggedIn) {\n  const {\n    encrypted: encodedEncrypted,\n    nonce: encodedNonce,\n    salt: encodedSalt,\n    iterations,\n    digest,\n  } = JSON.parse(localStorage.getItem('locked'));\n  const encrypted = bs58.decode(encodedEncrypted);\n  const nonce = bs58.decode(encodedNonce);\n  const salt = bs58.decode(encodedSalt);\n  const key = await deriveEncryptionKey(password, salt, iterations, digest);\n  const plaintext = secretbox.open(encrypted, nonce, key);\n  if (!plaintext) {\n    throw new Error('Incorrect password');\n  }\n  const decodedPlaintext = Buffer.from(plaintext).toString();\n  const { mnemonic, seed } = JSON.parse(decodedPlaintext);\n  if (stayLoggedIn) {\n    sessionStorage.setItem('unlocked', decodedPlaintext);\n  }\n  setUnlockedMnemonicAndSeed(mnemonic, seed);\n  return { mnemonic, seed };\n}\n\nasync function deriveEncryptionKey(password, salt, iterations, digest) {\n  return new Promise((resolve, reject) =>\n    pbkdf2(\n      password,\n      salt,\n      iterations,\n      secretbox.keyLength,\n      digest,\n      (err, key) => (err ? reject(err) : resolve(key)),\n    ),\n  );\n}\n\nexport function lockWallet() {\n  setUnlockedMnemonicAndSeed(null, null);\n}\n","import EventEmitter from 'events';\nimport { useConnectionConfig } from '../connection';\nimport { useListener } from '../utils';\nimport { useCallback } from 'react';\nimport { clusterApiUrl } from '@solana/web3.js';\n\nexport const TOKENS = {\n  [clusterApiUrl('mainnet-beta')]: [\n    {\n      mintAddress: 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt',\n      tokenName: 'Serum',\n      tokenSymbol: 'SRM',\n    },\n    {\n      mintAddress: 'MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L',\n      tokenName: 'MegaSerum',\n      tokenSymbol: 'MSRM',\n    },\n\n    {\n      tokenSymbol: 'BTC',\n      mintAddress: '9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E',\n      tokenName: 'Wrapped Bitcoin',\n    },\n    {\n      tokenSymbol: 'ETH',\n      mintAddress: '2FPyTwcZLUg1MDrwsyoP4D6s1tM7hAkHYRjkNb5w6Pxk',\n      tokenName: 'Wrapped Ethereum',\n    },\n    {\n      tokenSymbol: 'FTT',\n      mintAddress: 'AGFEad2et2ZJif9jaGpdMixQqvW5i81aBdvKe7PHNfz3',\n      tokenName: 'Wrapped FTT',\n    },\n    {\n      tokenSymbol: 'YFI',\n      mintAddress: '3JSf5tPeuscJGtaCp5giEiDhv51gQ4v3zWg8DGgyLfAB',\n      tokenName: 'Wrapped YFI',\n    },\n    {\n      tokenSymbol: 'LINK',\n      mintAddress: 'CWE8jPTUYhdCTZYWPTe1o5DFqfdjzWKc9WKz6rSjQUdG',\n      tokenName: 'Wrapped Chainlink',\n    },\n    {\n      tokenSymbol: 'XRP',\n      mintAddress: 'Ga2AXHpfAF6mv2ekZwcsJFqu7wB4NV331qNH7fW9Nst8',\n      tokenName: 'Wrapped XRP',\n    },\n    {\n      tokenSymbol: 'USDT',\n      mintAddress: 'BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4',\n      tokenName: 'Wrapped USDT',\n    },\n    {\n      tokenSymbol: 'USDC',\n      mintAddress: 'BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW',\n      tokenName: 'Wrapped USDC',\n    },\n  ],\n};\n\nconst customTokenNamesByNetwork = JSON.parse(\n  localStorage.getItem('tokenNames') ?? '{}',\n);\n\nconst nameUpdated = new EventEmitter();\nnameUpdated.setMaxListeners(100);\n\nexport function useTokenName(mint) {\n  const { endpoint } = useConnectionConfig();\n  useListener(nameUpdated, 'update');\n\n  if (!mint) {\n    return { name: null, symbol: null };\n  }\n\n  let info = customTokenNamesByNetwork?.[endpoint]?.[mint.toBase58()];\n  if (!info) {\n    let match = TOKENS?.[endpoint]?.find(\n      (token) => token.mintAddress === mint.toBase58(),\n    );\n    if (match) {\n      info = { name: match.tokenName, symbol: match.tokenSymbol };\n    }\n  }\n  return { name: info?.name, symbol: info?.symbol };\n}\n\nexport function useUpdateTokenName() {\n  const { endpoint } = useConnectionConfig();\n  return useCallback(\n    function updateTokenName(mint, name, symbol) {\n      if (!customTokenNamesByNetwork[endpoint]) {\n        customTokenNamesByNetwork[endpoint] = {};\n      }\n      customTokenNamesByNetwork[endpoint][mint.toBase58()] = { name, symbol };\n      localStorage.setItem(\n        'tokenNames',\n        JSON.stringify(customTokenNamesByNetwork),\n      );\n      nameUpdated.emit('update');\n    },\n    [endpoint],\n  );\n}\n","import { PublicKey, SystemProgram, Transaction } from '@solana/web3.js';\nimport {\n  initializeAccount,\n  initializeMint,\n  mintTo,\n  TOKEN_PROGRAM_ID,\n  transfer,\n} from './instructions';\nimport { ACCOUNT_LAYOUT, getOwnedAccountsFilters, MINT_LAYOUT } from './data';\nimport bs58 from 'bs58';\n\nexport async function getOwnedTokenAccounts(connection, publicKey) {\n  let filters = getOwnedAccountsFilters(publicKey);\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      'failed to get token accounts owned by ' +\n        publicKey.toBase58() +\n        ': ' +\n        resp.error.message,\n    );\n  }\n  return resp.result\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data: bs58.decode(data),\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }))\n    .filter(({ accountInfo }) => {\n      // TODO: remove this check once mainnet is updated\n      return filters.every((filter) => {\n        if (filter.dataSize) {\n          return accountInfo.data.length === filter.dataSize;\n        } else if (filter.memcmp) {\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\n          return accountInfo.data\n            .slice(\n              filter.memcmp.offset,\n              filter.memcmp.offset + filterBytes.length,\n            )\n            .equals(filterBytes);\n        }\n        return false;\n      });\n    });\n}\n\nexport async function createAndInitializeMint({\n  connection,\n  owner, // Account for paying fees and allowed to mint new tokens\n  mint, // Account to hold token information\n  amount, // Number of tokens to issue\n  decimals,\n  initialAccount, // Account to hold newly issued tokens, if amount > 0\n}) {\n  let transaction = SystemProgram.createAccount({\n    fromPubkey: owner.publicKey,\n    newAccountPubkey: mint.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(\n      MINT_LAYOUT.span,\n    ),\n    space: MINT_LAYOUT.span,\n    programId: TOKEN_PROGRAM_ID,\n  });\n  transaction.add(\n    initializeMint({\n      mint: mint.publicKey,\n      decimals,\n      mintAuthority: owner.publicKey,\n    }),\n  );\n  let signers = [owner, mint];\n  if (amount > 0) {\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: owner.publicKey,\n        newAccountPubkey: initialAccount.publicKey,\n        lamports: await connection.getMinimumBalanceForRentExemption(\n          ACCOUNT_LAYOUT.span,\n        ),\n        space: ACCOUNT_LAYOUT.span,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n    );\n    signers.push(initialAccount);\n    transaction.add(\n      initializeAccount({\n        account: initialAccount.publicKey,\n        mint: mint.publicKey,\n        owner: owner.publicKey,\n      }),\n    );\n    transaction.add(\n      mintTo({\n        mint: mint.publicKey,\n        destination: initialAccount.publicKey,\n        amount,\n        mintAuthority: owner.publicKey,\n      }),\n    );\n  }\n  return await connection.sendTransaction(transaction, signers);\n}\n\nexport async function createAndInitializeTokenAccount({\n  connection,\n  payer,\n  mintPublicKey,\n  newAccount,\n}) {\n  let transaction = SystemProgram.createAccount({\n    fromPubkey: payer.publicKey,\n    newAccountPubkey: newAccount.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(\n      ACCOUNT_LAYOUT.span,\n    ),\n    space: ACCOUNT_LAYOUT.span,\n    programId: TOKEN_PROGRAM_ID,\n  });\n  transaction.add(\n    initializeAccount({\n      account: newAccount.publicKey,\n      mint: mintPublicKey,\n      owner: payer.publicKey,\n    }),\n  );\n  let signers = [payer, newAccount];\n  return await connection.sendTransaction(transaction, signers);\n}\n\nexport async function transferTokens({\n  connection,\n  owner,\n  sourcePublicKey,\n  destinationPublicKey,\n  amount,\n}) {\n  let transaction = new Transaction().add(\n    transfer({\n      source: sourcePublicKey,\n      destination: destinationPublicKey,\n      owner: owner.publicKey,\n      amount,\n    }),\n  );\n  let signers = [owner];\n  return await connection.sendTransaction(transaction, signers);\n}\n"],"sourceRoot":""}