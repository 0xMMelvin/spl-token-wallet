{"version":3,"sources":["utils/connection.js","utils/wallet.js","utils/utils.js","components/SolanaIcon.js","components/NavigationFrame.js","components/LoadingIndicator.js","components/DialogForm.js","utils/notifications.js","components/AddTokenDialog.js","components/SendDialog.js","components/BalancesList.js","components/DebugButtons.js","pages/WalletPage.js","pages/PopupPage.js","pages/LoginPage.js","App.js","serviceWorker.js","index.js","utils/tokens/instructions.js","utils/tokens/data.js","utils/fetch-loop.js","utils/wallet-seed.js","utils/tokens/names.js","utils/tokens/index.js"],"names":["ConnectionContext","React","createContext","ConnectionProvider","children","useLocalStorageState","clusterApiUrl","endpoint","setEndpoint","connection","useMemo","Connection","Provider","value","useConnection","useContext","useConnectionConfig","context","useIsProdNetwork","useSolanaExplorerUrlSuffix","useAccountInfo","publicKey","cacheKey","tuple","toBase58","useAsyncData","a","getAccountInfo","accountInfo","loaded","useEffect","id","onAccountChange","refreshCache","removeAccountChangeListener","refreshAccountInfo","clearCache","setInitialAccountInfo","setCache","initializeOnly","Wallet","seed","walletIndex","getTokenPublicKeys","getOwnedTokenAccounts","account","accounts","map","createTokenAccount","tokenAddress","createAndInitializeTokenAccount","payer","mintPublicKey","newAccount","Account","tokenAccountCost","getMinimumBalanceForRentExemption","ACCOUNT_LAYOUT","span","transferToken","source","destination","amount","equals","transferSol","transferTokens","owner","sourcePublicKey","destinationPublicKey","sendTransaction","SystemProgram","transfer","fromPubkey","toPubkey","lamports","this","getAccountFromSeed","accountIndex","derivedSeed","bip32","derivePath","privateKey","nacl","sign","keyPair","fromSeed","secretKey","WalletContext","WalletProvider","useListener","walletSeedChanged","getUnlockedMnemonicAndSeed","mnemonic","setWalletIndex","wallet","Buffer","from","useWallet","useWalletPublicKeys","tokenPublicKeys","refreshWalletPublicKeys","useBalanceInfo","accountInfoLoaded","TOKEN_PROGRAM_ID","parseTokenAccountData","data","mint","mintInfo","mintInfoLoaded","useTokenName","name","symbol","WRAPPED_SOL_MINT","decimals","tokenName","tokenSymbol","valid","parseMintData","e","useWalletSelector","walletCount","setWalletCount","addresses","seedBuffer","Array","keys","sleep","ms","Promise","resolve","setTimeout","key","defaultState","useState","storedState","localStorage","getItem","JSON","parse","state","setState","setLocalStorageState","useCallback","newState","removeItem","setItem","stringify","useEffectAfterTimeout","effect","timeout","handle","clearTimeout","emitter","eventName","forceUpdate","listener","i","on","removeListener","abbreviateAddress","address","base58","slice","length","SolanaIcon","SvgIcon","viewBox","d","useStyles","makeStyles","theme","content","paddingTop","spacing","paddingBottom","paddingLeft","paddingRight","title","flexGrow","button","marginLeft","menuItemIcon","minWidth","NavigationFrame","classes","AppBar","position","Toolbar","Typography","variant","className","component","WalletSelector","NetworkSelector","Hidden","xsDown","Button","color","target","rel","href","smUp","Tooltip","arrow","IconButton","anchorEl","setAnchorEl","networks","networkLabels","onClick","Menu","open","onClose","anchorOrigin","vertical","horizontal","getContentAnchorEl","network","MenuItem","selected","ListItemIcon","fontSize","index","Divider","root","display","alignItems","justifyContent","width","height","padding","LoadingIndicator","delay","rest","visible","setVisible","style","CircularProgress","DialogForm","onSubmit","Dialog","PaperProps","preventDefault","useSendTransaction","useSnackbar","enqueueSnackbar","closeSnackbar","sending","setSending","signaturePromise","onSuccess","onError","persist","signature","action","ViewTransactionOnExplorerButton","confirmTransaction","autoHideDuration","console","warn","message","urlSuffix","useCallAsync","promise","progressMessage","successMessage","result","feeFormat","Intl","NumberFormat","undefined","minimumFractionDigits","maximumFractionDigits","AddTokenDialog","updateTokenName","useUpdateTokenName","mintAddress","setMintAddress","setTokenName","setTokenSymbol","PublicKey","DialogTitle","DialogContent","DialogContentText","format","LAMPORTS_PER_SOL","TextField","label","fullWidth","margin","onChange","DialogActions","type","disabled","SendDialog","balanceInfo","destinationAddress","setDestinationAddress","transferAmountString","setTransferAmountString","balanceAmount","Math","round","parseFloat","pow","Error","trim","InputProps","endAdornment","InputAdornment","inputProps","step","helperText","balanceFormat","useGrouping","BalancesList","publicKeys","showAddTokenDialog","setShowAddTokenDialog","Paper","elevation","marginRight","List","disablePadding","BalanceListItem","textOverflow","overflowX","itemDetails","marginBottom","buttonContainer","marginTop","setOpen","sendDialogOpen","setSendDialogOpen","ListItem","ListItemText","primary","secondary","secondaryTypographyProps","Collapse","in","unmountOnExit","startIcon","Link","DebugButtons","callAsync","requestAirdrop","createAndInitializeMint","initialAccount","mintOwner","WalletPage","isProdNetwork","Container","fixed","maxWidth","Grid","container","item","xs","PopupPage","opener","origin","URLSearchParams","window","location","hash","get","postMessage","jsonrpc","connectedAccount","setConnectedAccount","hasConnectedAccount","requests","setRequests","unloadHandler","method","addEventListener","removeEventListener","messageHandler","error","ApproveConnectionForm","onApprove","params","focusParent","request","assert","bs58","decode","ApproveSignatureForm","encode","detached","onReject","textAlign","transaction","wordBreak","actions","Card","CardContent","gutterBottom","CardActions","close","LoginPage","restore","setRestore","RestoreWalletForm","goBack","hasLockedMnemonicAndSeed","LoginForm","CreateWalletForm","cursor","mnemonicAndSeed","setMnemonicAndSeed","generateMnemonicAndSeed","then","savedWords","setSavedWords","ChoosePasswordForm","password","storeMnemonicAndSeed","SeedWordsForm","goForward","confirmed","setConfirmed","paragraph","multiline","onFocus","currentTarget","select","FormControlLabel","control","Checkbox","checked","setPassword","passwordConfirm","setPasswordConfirm","autoComplete","stayLoggedIn","setStayLoggedIn","loadMnemonicAndSeed","setMnemonic","rows","mnemonicToSeed","App","prefersDarkMode","useMediaQuery","createMuiTheme","palette","blue","self","top","fallback","ThemeProvider","CssBaseline","maxSnack","PageContents","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","LAYOUT","BufferLayout","addVariant","instructionMaxSpan","max","Object","values","registry","r","encodeTokenInstructionData","instruction","b","alloc","initializeMint","pubkey","isSigner","isWritable","push","TransactionInstruction","programId","initializeAccount","MINT_LAYOUT","getOwnedAccountsFilters","memcmp","offset","offsetOf","bytes","dataSize","pageLoadTime","Date","globalCache","Map","globalLoops","loops","has","set","FetchLoopInternal","fn","addListener","loop","stopped","delete","refresh","all","FetchLoopListener","refreshInterval","callback","timeoutId","errors","notifyListeners","waitTime","min","timeSincePageLoad","visibilityState","hasFocus","random","listeners","Set","previousRefreshInterval","add","forEach","size","asyncFn","useReducer","rerender","bip39","generateMnemonic","toString","validateMnemonic","unlockedMnemonicAndSeed","sessionStorage","EventEmitter","setUnlockedMnemonicAndSeed","emit","plaintext","salt","randomBytes","kdf","iterations","digest","deriveEncryptionKey","nonce","secretbox","nonceLength","encrypted","encodedEncrypted","encodedNonce","encodedSalt","decodedPlaintext","reject","pbkdf2","keyLength","err","customTokenNamesByNetwork","nameUpdated","info","setMaxListeners","filters","_rpcRequest","commitment","resp","executable","filter","every","filterBytes","newAccountPubkey","space","createAccount","signers","Transaction"],"mappings":"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","file":"static/js/main.7a63f499.chunk.js","sourcesContent":["import React, { useContext, useEffect, useMemo } from 'react';\nimport { clusterApiUrl, Connection } from '@solana/web3.js';\nimport { useLocalStorageState } from './utils';\nimport { refreshCache, setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\n\nconst ConnectionContext = React.createContext(null);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState(\n    'endpoint',\n    clusterApiUrl('devnet'),\n  );\n\n  const connection = useMemo(() => new Connection(endpoint, 'single'), [\n    endpoint,\n  ]);\n\n  return (\n    <ConnectionContext.Provider value={{ endpoint, setEndpoint, connection }}>\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  return useContext(ConnectionContext).connection;\n}\n\nexport function useConnectionConfig() {\n  let context = useContext(ConnectionContext);\n  return { endpoint: context.endpoint, setEndpoint: context.setEndpoint };\n}\n\nexport function useIsProdNetwork() {\n  const endpoint = useContext(ConnectionContext).endpoint;\n  return endpoint === clusterApiUrl('mainnet-beta');\n}\n\nexport function useSolanaExplorerUrlSuffix() {\n  const endpoint = useContext(ConnectionContext).endpoint;\n  if (endpoint === clusterApiUrl('devnet')) {\n    return '?cluster=devnet';\n  } else if (endpoint === clusterApiUrl('testnet')) {\n    return '?cluster=testnet';\n  }\n  return '';\n}\n\nexport function useAccountInfo(publicKey) {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return () => {};\n    }\n    const id = connection.onAccountChange(publicKey, () =>\n      refreshCache(cacheKey),\n    );\n    return () => connection.removeAccountChangeListener(id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, publicKey?.toBase58(), cacheKey]);\n  return [accountInfo, loaded];\n}\n\nexport function refreshAccountInfo(connection, publicKey, clearCache = false) {\n  const cacheKey = tuple(connection, publicKey.toBase58());\n  refreshCache(cacheKey, clearCache);\n}\n\nexport function setInitialAccountInfo(connection, publicKey, accountInfo) {\n  const cacheKey = tuple(connection, publicKey.toBase58());\n  setCache(cacheKey, accountInfo, { initializeOnly: true });\n}\n","import React, { useContext, useMemo } from 'react';\nimport * as bip32 from 'bip32';\nimport { Account, SystemProgram } from '@solana/web3.js';\nimport nacl from 'tweetnacl';\nimport {\n  setInitialAccountInfo,\n  useAccountInfo,\n  useConnection,\n} from './connection';\nimport {\n  createAndInitializeTokenAccount,\n  getOwnedTokenAccounts,\n  transferTokens,\n} from './tokens';\nimport { TOKEN_PROGRAM_ID, WRAPPED_SOL_MINT } from './tokens/instructions';\nimport {\n  ACCOUNT_LAYOUT,\n  parseMintData,\n  parseTokenAccountData,\n} from './tokens/data';\nimport { useListener, useLocalStorageState } from './utils';\nimport { useTokenName } from './tokens/names';\nimport { refreshCache, useAsyncData } from './fetch-loop';\nimport { getUnlockedMnemonicAndSeed, walletSeedChanged } from './wallet-seed';\n\nexport class Wallet {\n  constructor(connection, seed, walletIndex = 0) {\n    this.connection = connection;\n    this.seed = seed;\n    this.walletIndex = walletIndex;\n    this.account = Wallet.getAccountFromSeed(this.seed, this.walletIndex);\n  }\n\n  static getAccountFromSeed(seed, walletIndex, accountIndex = 0) {\n    const derivedSeed = bip32\n      .fromSeed(seed)\n      .derivePath(`m/501'/${walletIndex}'/0/${accountIndex}`).privateKey;\n    return new Account(nacl.sign.keyPair.fromSeed(derivedSeed).secretKey);\n  }\n\n  get publicKey() {\n    return this.account.publicKey;\n  }\n\n  getTokenPublicKeys = async () => {\n    let accounts = await getOwnedTokenAccounts(\n      this.connection,\n      this.account.publicKey,\n    );\n    return accounts.map(({ publicKey, accountInfo }) => {\n      setInitialAccountInfo(this.connection, publicKey, accountInfo);\n      return publicKey;\n    });\n  };\n\n  createTokenAccount = async (tokenAddress) => {\n    return await createAndInitializeTokenAccount({\n      connection: this.connection,\n      payer: this.account,\n      mintPublicKey: tokenAddress,\n      newAccount: new Account(),\n    });\n  };\n\n  tokenAccountCost = async () => {\n    return this.connection.getMinimumBalanceForRentExemption(\n      ACCOUNT_LAYOUT.span,\n    );\n  };\n\n  transferToken = async (source, destination, amount) => {\n    if (source.equals(this.publicKey)) {\n      return this.transferSol(destination, amount);\n    }\n    return await transferTokens({\n      connection: this.connection,\n      owner: this.account,\n      sourcePublicKey: source,\n      destinationPublicKey: destination,\n      amount,\n    });\n  };\n\n  transferSol = async (destination, amount) => {\n    return await this.connection.sendTransaction(\n      SystemProgram.transfer({\n        fromPubkey: this.publicKey,\n        toPubkey: destination,\n        lamports: amount,\n      }),\n      [this.account],\n    );\n  };\n}\n\nconst WalletContext = React.createContext(null);\n\nexport function WalletProvider({ children }) {\n  useListener(walletSeedChanged, 'change');\n  const { mnemonic, seed } = getUnlockedMnemonicAndSeed();\n  const connection = useConnection();\n  const [walletIndex, setWalletIndex] = useLocalStorageState('walletIndex', 0);\n  const wallet = useMemo(\n    () =>\n      seed\n        ? new Wallet(connection, Buffer.from(seed, 'hex'), walletIndex)\n        : null,\n    [connection, seed, walletIndex],\n  );\n  return (\n    <WalletContext.Provider\n      value={{ wallet, walletIndex, setWalletIndex, seed, mnemonic }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  return useContext(WalletContext).wallet;\n}\n\nexport function useWalletPublicKeys() {\n  let wallet = useWallet();\n  let [tokenPublicKeys, loaded] = useAsyncData(\n    wallet.getTokenPublicKeys,\n    wallet.getTokenPublicKeys,\n  );\n  let publicKeys = [wallet.account.publicKey, ...(tokenPublicKeys ?? [])];\n  return [publicKeys, loaded];\n}\n\nexport function refreshWalletPublicKeys(wallet) {\n  refreshCache(wallet.getTokenPublicKeys);\n}\n\nexport function useBalanceInfo(publicKey) {\n  let [accountInfo, accountInfoLoaded] = useAccountInfo(publicKey);\n  let { mint, owner, amount } = accountInfo?.owner.equals(TOKEN_PROGRAM_ID)\n    ? parseTokenAccountData(accountInfo.data)\n    : {};\n  let [mintInfo, mintInfoLoaded] = useAccountInfo(mint);\n  let { name, symbol } = useTokenName(mint);\n\n  if (!accountInfoLoaded) {\n    return null;\n  }\n\n  if (mint && mint.equals(WRAPPED_SOL_MINT)) {\n    return {\n      amount,\n      decimals: 9,\n      mint,\n      owner,\n      tokenName: 'Wrapped SOL',\n      tokenSymbol: 'SOL',\n      valid: true,\n    };\n  }\n\n  if (mint && mintInfoLoaded) {\n    try {\n      let { decimals } = parseMintData(mintInfo.data);\n      return {\n        amount,\n        decimals,\n        mint,\n        owner,\n        tokenName: name,\n        tokenSymbol: symbol,\n        valid: true,\n      };\n    } catch (e) {\n      return {\n        amount,\n        decimals: 0,\n        mint,\n        owner,\n        tokenName: 'Invalid',\n        tokenSymbol: 'INVALID',\n        valid: false,\n      };\n    }\n  }\n\n  if (!mint) {\n    return {\n      amount: accountInfo?.lamports ?? 0,\n      decimals: 9,\n      mint: null,\n      owner: publicKey,\n      tokenName: 'SOL',\n      tokenSymbol: 'SOL',\n      valid: true,\n    };\n  }\n\n  return null;\n}\n\nexport function useWalletSelector() {\n  const { walletIndex, setWalletIndex, seed } = useContext(WalletContext);\n  const [walletCount, setWalletCount] = useLocalStorageState('walletCount', 1);\n  function selectWallet(walletIndex) {\n    if (walletIndex >= walletCount) {\n      setWalletCount(walletIndex + 1);\n    }\n    setWalletIndex(walletIndex);\n  }\n  const addresses = useMemo(() => {\n    if (!seed) {\n      return [];\n    }\n    const seedBuffer = Buffer.from(seed, 'hex');\n    return [...Array(walletCount).keys()].map(\n      (walletIndex) =>\n        Wallet.getAccountFromSeed(seedBuffer, walletIndex).publicKey,\n    );\n  }, [seed, walletCount]);\n  return { addresses, walletIndex, setWalletIndex: selectWallet };\n}\n\nexport async function mnemonicToSecretKey(mnemonic) {\n  const { mnemonicToSeed } = await import('bip39');\n  const rootSeed = Buffer.from(await mnemonicToSeed(mnemonic), 'hex');\n  const derivedSeed = bip32.fromSeed(rootSeed).derivePath(\"m/501'/0'/0/0\")\n    .privateKey;\n  return nacl.sign.keyPair.fromSeed(derivedSeed).secretKey;\n}\n","import { useCallback, useEffect, useState } from 'react';\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function useLocalStorageState(key, defaultState = null) {\n  const [state, setState] = useState(() => {\n    let storedState = localStorage.getItem(key);\n    if (storedState) {\n      return JSON.parse(storedState);\n    }\n    return defaultState;\n  });\n\n  const setLocalStorageState = useCallback(\n    (newState) => {\n      let changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n      setState(newState);\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, JSON.stringify(newState));\n      }\n    },\n    [state, key],\n  );\n\n  return [state, setLocalStorageState];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    let handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  let [, forceUpdate] = useState(0);\n  useEffect(() => {\n    let listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address) {\n  let base58 = address.toBase58();\n  return base58.slice(0, 4) + '…' + base58.slice(base58.length - 4);\n}\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default function SolanaIcon() {\n  return (\n    <SvgIcon viewBox=\"0 0 450 450\">\n      <path d=\"m374.393945,136.203008c-2.518,2.519 -5.934,3.934 -9.496,3.934l-336.443,0c-11.891,0 -17.914,-14.315 -9.601,-22.817l55.186,-56.441c2.527,-2.584 5.988,-4.041 9.602,-4.041l337.697,0c11.964,0 17.955,14.465 9.496,22.925l-56.441,56.44z\" />\n      <path d=\"m374.393945,392.628008c-2.518,2.518 -5.934,3.933 -9.496,3.933l-336.443,0c-11.891,0 -17.914,-14.315 -9.601,-22.817l55.186,-56.441c2.527,-2.584 5.988,-4.041 9.602,-4.041l337.697,0c11.964,0 17.955,14.465 9.496,22.925l-56.441,56.441z\" />\n      <path d=\"m374.393945,188.933008c-2.518,-2.518 -5.934,-3.933 -9.496,-3.933l-336.443,0c-11.891,0 -17.914,14.315 -9.601,22.817l55.186,56.441c2.527,2.584 5.988,4.04 9.602,4.04l337.697,0c11.964,0 17.955,-14.464 9.496,-22.924l-56.441,-56.441z\" />\n    </SvgIcon>\n  );\n}\n","import React, { useState } from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useConnectionConfig } from '../utils/connection';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport { useWalletSelector } from '../utils/wallet';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AddIcon from '@material-ui/icons/Add';\nimport AccountIcon from '@material-ui/icons/AccountCircle';\nimport Divider from '@material-ui/core/Divider';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport SolanaIcon from './SolanaIcon';\nimport CodeIcon from '@material-ui/icons/Code';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  button: {\n    marginLeft: theme.spacing(1),\n  },\n  menuItemIcon: {\n    minWidth: 32,\n  },\n}));\n\nexport default function NavigationFrame({ children }) {\n  const classes = useStyles();\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title} component=\"h1\">\n            Solana SPL Token Wallet\n          </Typography>\n          <WalletSelector />\n          <NetworkSelector />\n          <Hidden xsDown>\n            <Button\n              component=\"a\"\n              color=\"inherit\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              href=\"https://github.com/serum-foundation/spl-token-wallet\"\n              className={classes.button}\n            >\n              Source\n            </Button>\n          </Hidden>\n          <Hidden smUp>\n            <Tooltip title=\"View Source\" arrow>\n              <IconButton\n                component=\"a\"\n                color=\"inherit\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                href=\"https://github.com/serum-foundation/spl-token-wallet\"\n              >\n                <CodeIcon />\n              </IconButton>\n            </Tooltip>\n          </Hidden>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.content}>{children}</main>\n    </>\n  );\n}\n\nfunction NetworkSelector() {\n  const { endpoint, setEndpoint } = useConnectionConfig();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const classes = useStyles();\n\n  const networks = [\n    clusterApiUrl('mainnet-beta'),\n    clusterApiUrl('devnet'),\n    clusterApiUrl('testnet'),\n    'http://localhost:8899',\n  ];\n\n  const networkLabels = {\n    [clusterApiUrl('mainnet-beta')]: 'Mainnet Beta',\n    [clusterApiUrl('devnet')]: 'Devnet',\n    [clusterApiUrl('testnet')]: 'Testnet',\n  };\n\n  return (\n    <>\n      <Hidden xsDown>\n        <Button\n          color=\"inherit\"\n          onClick={(e) => setAnchorEl(e.target)}\n          className={classes.button}\n        >\n          {networkLabels[endpoint] ?? 'Network'}\n        </Button>\n      </Hidden>\n      <Hidden smUp>\n        <Tooltip title=\"Select Network\" arrow>\n          <IconButton color=\"inherit\" onClick={(e) => setAnchorEl(e.target)}>\n            <SolanaIcon />\n          </IconButton>\n        </Tooltip>\n      </Hidden>\n      <Menu\n        anchorEl={anchorEl}\n        open={!!anchorEl}\n        onClose={() => setAnchorEl(null)}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        getContentAnchorEl={null}\n      >\n        {networks.map((network) => (\n          <MenuItem\n            key={network}\n            onClick={() => {\n              setAnchorEl(null);\n              setEndpoint(network);\n            }}\n            selected={network === endpoint}\n          >\n            <ListItemIcon className={classes.menuItemIcon}>\n              {network === endpoint ? <CheckIcon fontSize=\"small\" /> : null}\n            </ListItemIcon>\n            {network}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n}\n\nfunction WalletSelector() {\n  const { addresses, walletIndex, setWalletIndex } = useWalletSelector();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const classes = useStyles();\n\n  if (addresses.length === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <Hidden xsDown>\n        <Button\n          color=\"inherit\"\n          onClick={(e) => setAnchorEl(e.target)}\n          className={classes.button}\n        >\n          Account\n        </Button>\n      </Hidden>\n      <Hidden smUp>\n        <Tooltip title=\"Select Account\" arrow>\n          <IconButton color=\"inherit\" onClick={(e) => setAnchorEl(e.target)}>\n            <AccountIcon />\n          </IconButton>\n        </Tooltip>\n      </Hidden>\n      <Menu\n        anchorEl={anchorEl}\n        open={!!anchorEl}\n        onClose={() => setAnchorEl(null)}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        getContentAnchorEl={null}\n      >\n        {addresses.map((address, index) => (\n          <MenuItem\n            key={address.toBase58()}\n            onClick={() => {\n              setAnchorEl(null);\n              setWalletIndex(index);\n            }}\n            selected={index === walletIndex}\n          >\n            <ListItemIcon className={classes.menuItemIcon}>\n              {index === walletIndex ? <CheckIcon fontSize=\"small\" /> : null}\n            </ListItemIcon>\n            {address.toBase58()}\n          </MenuItem>\n        ))}\n        <Divider />\n        <MenuItem\n          onClick={() => {\n            setAnchorEl(null);\n            setWalletIndex(addresses.length);\n          }}\n        >\n          <ListItemIcon className={classes.menuItemIcon}>\n            <AddIcon fontSize=\"small\" />\n          </ListItemIcon>\n          Create Account\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useEffectAfterTimeout } from '../utils/utils';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function LoadingIndicator({\n  height = null,\n  delay = 500,\n  ...rest\n}) {\n  const classes = useStyles();\n  const [visible, setVisible] = useState(false);\n\n  useEffectAfterTimeout(() => setVisible(true), delay);\n\n  let style = {};\n  if (height) {\n    style.height = height;\n  }\n\n  if (!visible) {\n    return height ? <div style={style} /> : null;\n  }\n\n  return (\n    <div className={classes.root} style={style} {...rest}>\n      <CircularProgress />\n    </div>\n  );\n}\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\n\nexport default function DialogForm({\n  open,\n  onClose,\n  onSubmit,\n  children,\n  ...rest\n}) {\n  return (\n    <Dialog\n      open={open}\n      PaperProps={{\n        component: 'form',\n        onSubmit: (e) => {\n          e.preventDefault();\n          if (onSubmit) {\n            onSubmit();\n          }\n        },\n      }}\n      onClose={onClose}\n      {...rest}\n    >\n      {children}\n    </Dialog>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useConnection, useSolanaExplorerUrlSuffix } from './connection';\nimport Button from '@material-ui/core/Button';\n\nexport function useSendTransaction() {\n  const connection = useConnection();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const [sending, setSending] = useState(false);\n\n  async function sendTransaction(\n    signaturePromise,\n    { onSuccess, onError } = {},\n  ) {\n    let id = enqueueSnackbar('Sending transaction...', {\n      variant: 'info',\n      persist: true,\n    });\n    setSending(true);\n    try {\n      let signature = await signaturePromise;\n      closeSnackbar(id);\n      id = enqueueSnackbar('Confirming transaction...', {\n        variant: 'info',\n        persist: true,\n        action: <ViewTransactionOnExplorerButton signature={signature} />,\n      });\n      await connection.confirmTransaction(signature, 1);\n      closeSnackbar(id);\n      setSending(false);\n      enqueueSnackbar('Transaction confirmed', {\n        variant: 'success',\n        autoHideDuration: 15000,\n        action: <ViewTransactionOnExplorerButton signature={signature} />,\n      });\n      if (onSuccess) {\n        onSuccess(signature);\n      }\n    } catch (e) {\n      closeSnackbar(id);\n      setSending(false);\n      console.warn(e.message);\n      enqueueSnackbar(e.message, { variant: 'error' });\n      if (onError) {\n        onError(e);\n      }\n    }\n  }\n\n  return [sendTransaction, sending];\n}\n\nfunction ViewTransactionOnExplorerButton({ signature }) {\n  const urlSuffix = useSolanaExplorerUrlSuffix();\n  return (\n    <Button\n      color=\"inherit\"\n      component=\"a\"\n      target=\"_blank\"\n      rel=\"noopener\"\n      href={`https://explorer.solana.com/tx/${signature}` + urlSuffix}\n    >\n      View on Solana Explorer\n    </Button>\n  );\n}\n\nexport function useCallAsync() {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  return async function callAsync(\n    promise,\n    {\n      progressMessage = 'Submitting...',\n      successMessage = 'Success',\n      onSuccess,\n      onError,\n    } = {},\n  ) {\n    let id = enqueueSnackbar(progressMessage, {\n      variant: 'info',\n      persist: true,\n    });\n    try {\n      let result = await promise;\n      closeSnackbar(id);\n      if (successMessage) {\n        enqueueSnackbar(successMessage, { variant: 'success' });\n      }\n      if (onSuccess) {\n        onSuccess(result);\n      }\n    } catch (e) {\n      closeSnackbar(id);\n      enqueueSnackbar(e.message, { variant: 'error' });\n      if (onError) {\n        onError(e);\n      }\n    }\n  };\n}\n","import React, { useState } from 'react';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogForm from './DialogForm';\nimport { refreshWalletPublicKeys, useWallet } from '../utils/wallet';\nimport { LAMPORTS_PER_SOL, PublicKey } from '@solana/web3.js';\nimport { useUpdateTokenName } from '../utils/tokens/names';\nimport { useAsyncData } from '../utils/fetch-loop';\nimport LoadingIndicator from './LoadingIndicator';\nimport { useSendTransaction } from '../utils/notifications';\n\nconst feeFormat = new Intl.NumberFormat(undefined, {\n  minimumFractionDigits: 6,\n  maximumFractionDigits: 6,\n});\n\nexport default function AddTokenDialog({ open, onClose }) {\n  let wallet = useWallet();\n  let [tokenAccountCost] = useAsyncData(\n    wallet.tokenAccountCost,\n    'tokenAccountCost',\n  );\n  let updateTokenName = useUpdateTokenName();\n\n  let [mintAddress, setMintAddress] = useState('');\n  let [tokenName, setTokenName] = useState('');\n  let [tokenSymbol, setTokenSymbol] = useState('');\n  let [sendTransaction, sending] = useSendTransaction();\n\n  function onSubmit() {\n    let mint = new PublicKey(mintAddress);\n    sendTransaction(wallet.createTokenAccount(mint), {\n      onSuccess: () => {\n        updateTokenName(mint, tokenName, tokenSymbol);\n        refreshWalletPublicKeys(wallet);\n        onClose();\n      },\n    });\n  }\n\n  return (\n    <DialogForm open={open} onClose={onClose} onSubmit={onSubmit}>\n      <DialogTitle>Add Token</DialogTitle>\n      <DialogContent>\n        {tokenAccountCost ? (\n          <DialogContentText>\n            Add a token to your wallet. This will cost{' '}\n            {feeFormat.format(tokenAccountCost / LAMPORTS_PER_SOL)} Solana.\n          </DialogContentText>\n        ) : (\n          <LoadingIndicator />\n        )}\n        <TextField\n          label=\"Token Mint Address\"\n          fullWidth\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={mintAddress}\n          onChange={(e) => setMintAddress(e.target.value)}\n        />\n        <TextField\n          label=\"Token Name\"\n          fullWidth\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={tokenName}\n          onChange={(e) => setTokenName(e.target.value)}\n        />\n        <TextField\n          label=\"Token Symbol\"\n          fullWidth\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={tokenSymbol}\n          onChange={(e) => setTokenSymbol(e.target.value)}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button type=\"submit\" color=\"primary\" disabled={sending}>\n          Add\n        </Button>\n      </DialogActions>\n    </DialogForm>\n  );\n}\n","import React, { useState } from 'react';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogForm from './DialogForm';\nimport { useWallet } from '../utils/wallet';\nimport { PublicKey } from '@solana/web3.js';\nimport { abbreviateAddress } from '../utils/utils';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { useSendTransaction } from '../utils/notifications';\n\nexport default function SendDialog({ open, onClose, publicKey, balanceInfo }) {\n  const wallet = useWallet();\n  const [destinationAddress, setDestinationAddress] = useState('');\n  const [transferAmountString, setTransferAmountString] = useState('');\n  const [sendTransaction, sending] = useSendTransaction();\n\n  let {\n    amount: balanceAmount,\n    decimals,\n    mint,\n    tokenName,\n    tokenSymbol,\n  } = balanceInfo;\n\n  function onSubmit() {\n    let amount = Math.round(\n      parseFloat(transferAmountString) * Math.pow(10, decimals),\n    );\n    if (!amount || amount <= 0) {\n      throw new Error('Invalid amount');\n    }\n    sendTransaction(\n      wallet.transferToken(\n        publicKey,\n        new PublicKey(destinationAddress),\n        amount,\n      ),\n      { onSuccess: onClose },\n    );\n  }\n\n  return (\n    <DialogForm open={open} onClose={onClose} onSubmit={onSubmit}>\n      <DialogTitle>\n        Send {tokenName ?? abbreviateAddress(mint)}\n        {tokenSymbol ? ` (${tokenSymbol})` : null}\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"Recipient Address\"\n          fullWidth\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={destinationAddress}\n          onChange={(e) => setDestinationAddress(e.target.value.trim())}\n        />\n        <TextField\n          label=\"Amount\"\n          fullWidth\n          variant=\"outlined\"\n          margin=\"normal\"\n          type=\"number\"\n          InputProps={{\n            endAdornment: tokenSymbol ? (\n              <InputAdornment position=\"end\">{tokenSymbol}</InputAdornment>\n            ) : null,\n            inputProps: {\n              step: Math.pow(10, -decimals),\n            },\n          }}\n          value={transferAmountString}\n          onChange={(e) => setTransferAmountString(e.target.value.trim())}\n          helperText={`Max: ${balanceAmount / Math.pow(10, decimals)}`}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button type=\"submit\" color=\"primary\" disabled={sending}>\n          Send\n        </Button>\n      </DialogActions>\n    </DialogForm>\n  );\n}\n","import React, { useState } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  refreshWalletPublicKeys,\n  useBalanceInfo,\n  useWallet,\n  useWalletPublicKeys,\n} from '../utils/wallet';\nimport LoadingIndicator from './LoadingIndicator';\nimport Collapse from '@material-ui/core/Collapse';\nimport { Typography } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { abbreviateAddress } from '../utils/utils';\nimport Button from '@material-ui/core/Button';\nimport SendIcon from '@material-ui/icons/Send';\nimport ReceiveIcon from '@material-ui/icons/CallReceived';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AddIcon from '@material-ui/icons/Add';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddTokenDialog from './AddTokenDialog';\nimport SendDialog from './SendDialog';\nimport {\n  refreshAccountInfo,\n  useSolanaExplorerUrlSuffix,\n} from '../utils/connection';\n\nconst balanceFormat = new Intl.NumberFormat(undefined, {\n  minimumFractionDigits: 4,\n  maximumFractionDigits: 4,\n  useGrouping: true,\n});\n\nexport default function BalancesList() {\n  const wallet = useWallet();\n  const [publicKeys, loaded] = useWalletPublicKeys();\n  const [showAddTokenDialog, setShowAddTokenDialog] = useState(false);\n\n  return (\n    <Paper>\n      <AppBar position=\"static\" color=\"default\" elevation={1}>\n        <Toolbar>\n          <Typography variant=\"h6\" style={{ flexGrow: 1 }} component=\"h2\">\n            Balances\n          </Typography>\n          <Tooltip title=\"Add Token\" arrow>\n            <IconButton onClick={() => setShowAddTokenDialog(true)}>\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Refresh\" arrow>\n            <IconButton\n              onClick={() => {\n                refreshWalletPublicKeys(wallet);\n                publicKeys.map((publicKey) =>\n                  refreshAccountInfo(wallet.connection, publicKey, true),\n                );\n              }}\n              style={{ marginRight: -12 }}\n            >\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </AppBar>\n      <List disablePadding>\n        {publicKeys.map((publicKey) => (\n          <BalanceListItem key={publicKey.toBase58()} publicKey={publicKey} />\n        ))}\n        {loaded ? null : <LoadingIndicator />}\n      </List>\n      <AddTokenDialog\n        open={showAddTokenDialog}\n        onClose={() => setShowAddTokenDialog(false)}\n      />\n    </Paper>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  address: {\n    textOverflow: 'ellipsis',\n    overflowX: 'hidden',\n  },\n  itemDetails: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction BalanceListItem({ publicKey }) {\n  const balanceInfo = useBalanceInfo(publicKey);\n  const urlSuffix = useSolanaExplorerUrlSuffix();\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [sendDialogOpen, setSendDialogOpen] = useState(false);\n\n  if (!balanceInfo) {\n    return <LoadingIndicator delay={0} />;\n  }\n\n  let { amount, decimals, mint, tokenName, tokenSymbol } = balanceInfo;\n\n  return (\n    <>\n      <ListItem button onClick={() => setOpen((open) => !open)}>\n        <ListItemText\n          primary={\n            <>\n              {balanceFormat.format(amount / Math.pow(10, decimals))}{' '}\n              {tokenSymbol ?? abbreviateAddress(mint)}\n            </>\n          }\n          secondary={publicKey.toBase58()}\n          secondaryTypographyProps={{ className: classes.address }}\n        />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <div className={classes.itemDetails}>\n          <div className={classes.buttonContainer}>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              startIcon={<ReceiveIcon />}\n            >\n              Receive\n            </Button>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              startIcon={<SendIcon />}\n              onClick={() => setSendDialogOpen(true)}\n            >\n              Send\n            </Button>\n          </div>\n          <Typography variant=\"body2\" className={classes.address}>\n            Deposit Address: {publicKey.toBase58()}\n          </Typography>\n          <Typography variant=\"body2\">\n            Token Name: {tokenName ?? 'Unknown'}\n          </Typography>\n          <Typography variant=\"body2\">\n            Token Symbol: {tokenSymbol ?? 'Unknown'}\n          </Typography>\n          {mint ? (\n            <Typography variant=\"body2\" className={classes.address}>\n              Token Address: {mint.toBase58()}\n            </Typography>\n          ) : null}\n          <Typography variant=\"body2\">\n            <Link\n              href={\n                `https://explorer.solana.com/account/${publicKey.toBase58()}` +\n                urlSuffix\n              }\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              View on Solana Explorer\n            </Link>\n          </Typography>\n        </div>\n      </Collapse>\n      <SendDialog\n        open={sendDialogOpen}\n        onClose={() => setSendDialogOpen(false)}\n        balanceInfo={balanceInfo}\n        publicKey={publicKey}\n      />\n    </>\n  );\n}\n","import { refreshWalletPublicKeys, useWallet } from '../utils/wallet';\nimport { useUpdateTokenName } from '../utils/tokens/names';\nimport { useCallAsync, useSendTransaction } from '../utils/notifications';\nimport { Account, LAMPORTS_PER_SOL } from '@solana/web3.js';\nimport { abbreviateAddress, sleep } from '../utils/utils';\nimport { refreshAccountInfo } from '../utils/connection';\nimport { createAndInitializeMint } from '../utils/tokens';\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\n\nexport default function DebugButtons() {\n  const wallet = useWallet();\n  const updateTokenName = useUpdateTokenName();\n  const [sendTransaction, sending] = useSendTransaction();\n  const callAsync = useCallAsync();\n\n  function requestAirdrop() {\n    callAsync(\n      wallet.connection.requestAirdrop(\n        wallet.account.publicKey,\n        LAMPORTS_PER_SOL,\n      ),\n      {\n        onSuccess: async () => {\n          await sleep(5000);\n          refreshAccountInfo(wallet.connection, wallet.account.publicKey);\n        },\n        successMessage:\n          'Success! Please wait up to 30 seconds for the SOL tokens to appear in your wallet.',\n      },\n    );\n  }\n\n  function mintTestToken() {\n    let mint = new Account();\n    updateTokenName(\n      mint.publicKey,\n      `Test Token ${abbreviateAddress(mint.publicKey)}`,\n      `TEST${mint.publicKey.toBase58().slice(0, 2)}`,\n    );\n    sendTransaction(\n      createAndInitializeMint({\n        connection: wallet.connection,\n        payer: wallet.account,\n        mint,\n        amount: 1000,\n        decimals: 2,\n        initialAccount: new Account(),\n        mintOwner: wallet.account,\n      }),\n      { onSuccess: () => refreshWalletPublicKeys(wallet) },\n    );\n  }\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Button variant=\"contained\" color=\"primary\" onClick={requestAirdrop}>\n        Request Airdrop\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={mintTestToken}\n        disabled={sending}\n        style={{ marginLeft: 24 }}\n      >\n        Mint Test Token\n      </Button>\n    </div>\n  );\n}\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport BalancesList from '../components/BalancesList';\nimport Grid from '@material-ui/core/Grid';\nimport { useIsProdNetwork } from '../utils/connection';\nimport DebugButtons from '../components/DebugButtons';\n\nexport default function WalletPage() {\n  const isProdNetwork = useIsProdNetwork();\n  return (\n    <Container fixed maxWidth=\"md\">\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <BalancesList />\n        </Grid>\n        {isProdNetwork ? null : (\n          <Grid item xs={12}>\n            <DebugButtons />\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useWallet } from '../utils/wallet';\nimport { Typography } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport { makeStyles } from '@material-ui/core/styles';\nimport assert from 'assert';\nimport bs58 from 'bs58';\nimport nacl from 'tweetnacl';\n\nexport default function PopupPage({ opener }) {\n  const wallet = useWallet();\n\n  const origin = useMemo(() => {\n    let params = new URLSearchParams(window.location.hash.slice(1));\n    return params.get('origin');\n  }, []);\n  const postMessage = useCallback(\n    (message) => {\n      opener.postMessage({ jsonrpc: '2.0', ...message }, origin);\n    },\n    [opener, origin],\n  );\n\n  const [connectedAccount, setConnectedAccount] = useState(null);\n  const hasConnectedAccount = !!connectedAccount;\n  const [requests, setRequests] = useState([]);\n\n  // Send a disconnect event if this window is closed, this component is\n  // unmounted, or setConnectedAccount(null) is called.\n  useEffect(() => {\n    if (hasConnectedAccount) {\n      function unloadHandler() {\n        postMessage({ method: 'disconnected' });\n      }\n      window.addEventListener('beforeunload', unloadHandler);\n      return () => {\n        unloadHandler();\n        window.removeEventListener('beforeunload', unloadHandler);\n      };\n    }\n  }, [hasConnectedAccount, postMessage]);\n\n  // Disconnect if the user switches to a different wallet.\n  useEffect(() => {\n    if (\n      connectedAccount &&\n      !connectedAccount.publicKey.equals(wallet.publicKey)\n    ) {\n      setConnectedAccount(null);\n    }\n  }, [connectedAccount, wallet]);\n\n  // Push requests from the parent window into a queue.\n  useEffect(() => {\n    function messageHandler(e) {\n      if (e.origin === origin && e.source === window.opener) {\n        if (e.data.method !== 'signTransaction') {\n          postMessage({ error: 'Unsupported method', id: e.data.id });\n        }\n        setRequests((requests) => [...requests, e.data]);\n      }\n    }\n    window.addEventListener('message', messageHandler);\n    return () => window.removeEventListener('message', messageHandler);\n  }, [origin, postMessage]);\n\n  if (\n    !connectedAccount ||\n    !connectedAccount.publicKey.equals(wallet.publicKey)\n  ) {\n    // Approve the parent page to connect to this wallet.\n    function connect() {\n      setConnectedAccount(wallet.account);\n      postMessage({\n        method: 'connected',\n        params: { publicKey: wallet.publicKey.toBase58() },\n      });\n      focusParent();\n    }\n\n    return <ApproveConnectionForm origin={origin} onApprove={connect} />;\n  }\n\n  if (requests.length > 0) {\n    const request = requests[0];\n    assert(request.method === 'signTransaction');\n    const message = bs58.decode(request.params.message);\n\n    function sendSignature() {\n      setRequests((requests) => requests.slice(1));\n      postMessage({\n        result: {\n          signature: bs58.encode(\n            nacl.sign.detached(message, wallet.account.secretKey),\n          ),\n          publicKey: wallet.publicKey.toBase58(),\n        },\n        id: request.id,\n      });\n      if (requests.length === 1) {\n        focusParent();\n      }\n    }\n\n    function sendReject() {\n      setRequests((requests) => requests.slice(1));\n      postMessage({\n        error: 'Transaction cancelled',\n        id: request.id,\n      });\n      if (requests.length === 1) {\n        focusParent();\n      }\n    }\n\n    return (\n      <ApproveSignatureForm\n        origin={origin}\n        message={message}\n        onApprove={sendSignature}\n        onReject={sendReject}\n      />\n    );\n  }\n\n  return (\n    <Typography>Please keep this window open in the background.</Typography>\n  );\n}\n\n/**\n * Switch focus to the parent window. This requires that the parent runs\n * `window.name = 'parent'` before opening the popup.\n */\nfunction focusParent() {\n  window.open('', 'parent');\n}\n\nconst useStyles = makeStyles((theme) => ({\n  connection: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    textAlign: 'center',\n  },\n  transaction: {\n    wordBreak: 'break-all',\n  },\n  actions: {\n    justifyContent: 'space-between',\n  },\n}));\n\nfunction ApproveConnectionForm({ origin, onApprove }) {\n  const wallet = useWallet();\n  const classes = useStyles();\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" component=\"h1\" gutterBottom>\n          Allow this site to access your Solana account?\n        </Typography>\n        <div className={classes.connection}>\n          <Typography>{origin}</Typography>\n          <ImportExportIcon fontSize=\"large\" />\n          <Typography>{wallet.publicKey.toBase58()}</Typography>\n        </div>\n        <Typography>Only connect with sites you trust.</Typography>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button onClick={window.close}>Cancel</Button>\n        <Button color=\"primary\" onClick={onApprove}>\n          Connect\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nfunction ApproveSignatureForm({ origin, message, onApprove, onReject }) {\n  const classes = useStyles();\n\n  // TODO: decode message\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" component=\"h1\" gutterBottom>\n          {origin} would like to send the following transaction:\n        </Typography>\n        <Typography className={classes.transaction}>\n          {bs58.encode(message)}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button onClick={onReject}>Cancel</Button>\n        <Button color=\"primary\" onClick={onApprove}>\n          Approve\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  generateMnemonicAndSeed,\n  hasLockedMnemonicAndSeed,\n  loadMnemonicAndSeed,\n  mnemonicToSeed,\n  storeMnemonicAndSeed,\n} from '../utils/wallet-seed';\nimport Container from '@material-ui/core/Container';\nimport LoadingIndicator from '../components/LoadingIndicator';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport { useCallAsync } from '../utils/notifications';\nimport Link from '@material-ui/core/Link';\n\nexport default function LoginPage() {\n  const [restore, setRestore] = useState(false);\n  return (\n    <Container maxWidth=\"sm\">\n      {restore ? (\n        <RestoreWalletForm goBack={() => setRestore(false)} />\n      ) : (\n        <>\n          {hasLockedMnemonicAndSeed() ? <LoginForm /> : <CreateWalletForm />}\n          <br />\n          <Link style={{ cursor: 'pointer' }} onClick={() => setRestore(true)}>\n            Restore existing wallet\n          </Link>\n        </>\n      )}\n    </Container>\n  );\n}\n\nfunction CreateWalletForm() {\n  const [mnemonicAndSeed, setMnemonicAndSeed] = useState(null);\n  useEffect(() => {\n    generateMnemonicAndSeed().then(setMnemonicAndSeed);\n  }, []);\n  const [savedWords, setSavedWords] = useState(false);\n  const callAsync = useCallAsync();\n\n  function submit(password) {\n    const { mnemonic, seed } = mnemonicAndSeed;\n    callAsync(storeMnemonicAndSeed(mnemonic, seed, password), {\n      progressMessage: 'Creating wallet...',\n      successMessage: 'Wallet created',\n    });\n  }\n\n  if (!savedWords) {\n    return (\n      <SeedWordsForm\n        mnemonicAndSeed={mnemonicAndSeed}\n        goForward={() => setSavedWords(true)}\n      />\n    );\n  }\n\n  return (\n    <ChoosePasswordForm\n      mnemonicAndSeed={mnemonicAndSeed}\n      goBack={() => setSavedWords(false)}\n      onSubmit={submit}\n    />\n  );\n}\n\nfunction SeedWordsForm({ mnemonicAndSeed, goForward }) {\n  const [confirmed, setConfirmed] = useState(false);\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" gutterBottom>\n          Create New Wallet\n        </Typography>\n        <Typography paragraph>\n          Create a new wallet to hold Solana and SPL tokens.\n        </Typography>\n        <Typography>\n          Please write down the following twelve words and keep them in a safe\n          place:\n        </Typography>\n        {mnemonicAndSeed ? (\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            multiline\n            margin=\"normal\"\n            value={mnemonicAndSeed.mnemonic}\n            label=\"Seed Words\"\n            onFocus={(e) => e.currentTarget.select()}\n          />\n        ) : (\n          <LoadingIndicator />\n        )}\n        <Typography paragraph>\n          Your private keys are only stored on your current computer or device.\n          You will need these words to restore your wallet if your device is\n          damaged or lost.\n        </Typography>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={confirmed}\n              disabled={!mnemonicAndSeed}\n              onChange={(e) => setConfirmed(e.target.checked)}\n            />\n          }\n          label=\"I have saved these words in a safe place.\"\n        />\n      </CardContent>\n      <CardActions style={{ justifyContent: 'flex-end' }}>\n        <Button color=\"primary\" disabled={!confirmed} onClick={goForward}>\n          Continue\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nfunction ChoosePasswordForm({ goBack, onSubmit }) {\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" gutterBottom>\n          Choose a Password (Optional)\n        </Typography>\n        <Typography>\n          Optionally pick a password to protect your wallet.\n        </Typography>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          label=\"New Password\"\n          type=\"password\"\n          autoComplete=\"new-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          label=\"Confirm Password\"\n          type=\"password\"\n          autoComplete=\"new-password\"\n          value={passwordConfirm}\n          onChange={(e) => setPasswordConfirm(e.target.value)}\n        />\n        <Typography>\n          If you forget your password you will need to restore your wallet using\n          your seed words.\n        </Typography>\n      </CardContent>\n      <CardActions style={{ justifyContent: 'space-between' }}>\n        <Button onClick={goBack}>Back</Button>\n        <Button\n          color=\"primary\"\n          disabled={password !== passwordConfirm}\n          onClick={() => onSubmit(password)}\n        >\n          Create Wallet\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nfunction LoginForm() {\n  const [password, setPassword] = useState('');\n  const [stayLoggedIn, setStayLoggedIn] = useState(false);\n  const callAsync = useCallAsync();\n\n  function submit() {\n    callAsync(loadMnemonicAndSeed(password, stayLoggedIn), {\n      progressMessage: 'Unlocking wallet...',\n      successMessage: 'Wallet unlocked',\n    });\n  }\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" gutterBottom>\n          Unlock Wallet\n        </Typography>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={stayLoggedIn}\n              onChange={(e) => setStayLoggedIn(e.target.checked)}\n            />\n          }\n          label=\"Keep wallet unlocked\"\n        />\n      </CardContent>\n      <CardActions style={{ justifyContent: 'flex-end' }}>\n        <Button color=\"primary\" onClick={submit}>\n          Unlock\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nfunction RestoreWalletForm({ goBack }) {\n  const [mnemonic, setMnemonic] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const callAsync = useCallAsync();\n\n  function submit() {\n    callAsync(\n      mnemonicToSeed(mnemonic).then((seed) =>\n        storeMnemonicAndSeed(mnemonic, seed, password),\n      ),\n    );\n  }\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" gutterBottom>\n          Restore Existing Wallet\n        </Typography>\n        <Typography>\n          Restore your wallet using your twelve seed words. Note that this will\n          delete any existing wallet on this device.\n        </Typography>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          multiline\n          rows={3}\n          margin=\"normal\"\n          label=\"Seed Words\"\n          value={mnemonic}\n          onChange={(e) => setMnemonic(e.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          label=\"New Password (Optional)\"\n          type=\"password\"\n          autoComplete=\"new-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          label=\"Confirm Password\"\n          type=\"password\"\n          autoComplete=\"new-password\"\n          value={passwordConfirm}\n          onChange={(e) => setPasswordConfirm(e.target.value)}\n        />\n      </CardContent>\n      <CardActions style={{ justifyContent: 'space-between' }}>\n        <Button onClick={goBack}>Cancel</Button>\n        <Button\n          color=\"primary\"\n          disabled={password !== passwordConfirm}\n          onClick={submit}\n        >\n          Restore\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { Suspense } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {\n  ThemeProvider,\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n} from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport NavigationFrame from './components/NavigationFrame';\nimport { ConnectionProvider } from './utils/connection';\nimport WalletPage from './pages/WalletPage';\nimport { useWallet, WalletProvider } from './utils/wallet';\nimport LoadingIndicator from './components/LoadingIndicator';\nimport { SnackbarProvider } from 'notistack';\nimport PopupPage from './pages/PopupPage';\nimport LoginPage from './pages/LoginPage';\n\nexport default function App() {\n  // TODO: add toggle for dark mode\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: blue,\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  // Disallow rendering inside an iframe to prevent clickjacking.\n  if (window.self !== window.top) {\n    return null;\n  }\n\n  return (\n    <Suspense fallback={<LoadingIndicator />}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <ConnectionProvider>\n          <WalletProvider>\n            <SnackbarProvider maxSnack={5} autoHideDuration={8000}>\n              <NavigationFrame>\n                <Suspense fallback={<LoadingIndicator />}>\n                  <PageContents />\n                </Suspense>\n              </NavigationFrame>\n            </SnackbarProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ThemeProvider>\n    </Suspense>\n  );\n}\n\nfunction PageContents() {\n  const wallet = useWallet();\n  if (!wallet) {\n    return <LoginPage />;\n  }\n  if (window.opener) {\n    return <PopupPage opener={window.opener} />;\n  }\n  return <WalletPage />;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import * as BufferLayout from 'buffer-layout';\nimport { PublicKey, TransactionInstruction } from '@solana/web3.js';\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenSVp5gheXUvJ6jGWGeCsgPKgnE3YgdGKRVCMY9o',\n);\n\nexport const WRAPPED_SOL_MINT = new PublicKey(\n  'So11111111111111111111111111111111111111111',\n);\n\nconst LAYOUT = BufferLayout.union(BufferLayout.u8('instruction'));\nLAYOUT.addVariant(\n  0,\n  BufferLayout.struct([\n    // TODO: does this need to be aligned?\n    BufferLayout.nu64('amount'),\n    BufferLayout.u8('decimals'),\n  ]),\n  'initializeMint',\n);\nLAYOUT.addVariant(1, BufferLayout.struct([]), 'initializeAccount');\nLAYOUT.addVariant(\n  3,\n  BufferLayout.struct([BufferLayout.nu64('amount')]),\n  'transfer',\n);\nLAYOUT.addVariant(\n  7,\n  BufferLayout.struct([BufferLayout.nu64('amount')]),\n  'mintTo',\n);\nLAYOUT.addVariant(\n  8,\n  BufferLayout.struct([BufferLayout.nu64('amount')]),\n  'burn',\n);\n\nconst instructionMaxSpan = Math.max(\n  ...Object.values(LAYOUT.registry).map((r) => r.span),\n);\n\nfunction encodeTokenInstructionData(instruction) {\n  let b = Buffer.alloc(instructionMaxSpan);\n  let span = LAYOUT.encode(instruction, b);\n  return b.slice(0, span);\n}\n\nexport function initializeMint({\n  mint,\n  amount,\n  decimals,\n  initialAccount,\n  mintOwner,\n}) {\n  let keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n  if (amount) {\n    keys.push({ pubkey: initialAccount, isSigner: false, isWritable: true });\n  }\n  if (mintOwner) {\n    keys.push({ pubkey: mintOwner, isSigner: false, isWritable: false });\n  }\n  return new TransactionInstruction({\n    keys,\n    data: encodeTokenInstructionData({\n      initializeMint: {\n        amount,\n        decimals,\n      },\n    }),\n    programId: TOKEN_PROGRAM_ID,\n  });\n}\n\nexport function initializeAccount({ account, mint, owner }) {\n  let keys = [\n    { pubkey: account, isSigner: false, isWritable: true },\n    { pubkey: mint, isSigner: false, isWritable: false },\n    { pubkey: owner, isSigner: false, isWritable: false },\n  ];\n  return new TransactionInstruction({\n    keys,\n    data: encodeTokenInstructionData({\n      initializeAccount: {},\n    }),\n    programId: TOKEN_PROGRAM_ID,\n  });\n}\n\nexport function transfer({ source, destination, amount, owner }) {\n  let keys = [\n    { pubkey: source, isSigner: false, isWritable: true },\n    { pubkey: destination, isSigner: false, isWritable: true },\n    { pubkey: owner, isSigner: true, isWritable: false },\n  ];\n  return new TransactionInstruction({\n    keys,\n    data: encodeTokenInstructionData({\n      transfer: { amount },\n    }),\n    programId: TOKEN_PROGRAM_ID,\n  });\n}\n","import * as BufferLayout from 'buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(48),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(36),\n  BufferLayout.u8('decimals'),\n  BufferLayout.blob(3),\n]);\n\nexport function parseTokenAccountData(data) {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport function parseMintData(data) {\n  let { decimals } = MINT_LAYOUT.decode(data);\n  return { decimals };\n}\n\nexport function getOwnedAccountsFilters(publicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n","import assert from 'assert';\nimport { useEffect, useReducer } from 'react';\n\nconst pageLoadTime = new Date();\n\nconst globalCache = new Map();\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener(listener) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal(listener.cacheKey, listener.fn),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener(listener) {\n    let loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nclass FetchLoopListener {\n  constructor(cacheKey, fn, refreshInterval, callback) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.callback = callback;\n  }\n}\n\nclass FetchLoopInternal {\n  constructor(cacheKey, fn) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n  }\n\n  get refreshInterval() {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get stopped() {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener) {\n    let previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener) {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners() {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    try {\n      let data = await this.fn();\n      globalCache.set(this.cacheKey, data);\n      this.errors = 0;\n      this.notifyListeners();\n      return data;\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * Math.pow(2, this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        let timeSincePageLoad = new Date() - pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nexport function useAsyncData(\n  asyncFn,\n  cacheKey,\n  { refreshInterval = 60000 } = {},\n) {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      return () => {};\n    }\n    const listener = new FetchLoopListener(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      rerender,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return null;\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey, clearCache = false) {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function setCache(cacheKey, value, { initializeOnly = false } = {}) {\n  if (!initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n","import { pbkdf2 } from 'crypto';\nimport { randomBytes, secretbox } from 'tweetnacl';\nimport bs58 from 'bs58';\nimport { EventEmitter } from 'events';\n\nexport async function generateMnemonicAndSeed() {\n  const bip39 = await import('bip39');\n  const mnemonic = bip39.generateMnemonic(128);\n  const seed = await bip39.mnemonicToSeed(mnemonic);\n  return { mnemonic, seed: new Buffer(seed).toString('hex') };\n}\n\nexport async function mnemonicToSeed(mnemonic) {\n  const bip39 = await import('bip39');\n  if (!bip39.validateMnemonic(mnemonic)) {\n    throw new Error('Invalid seed words');\n  }\n  const seed = await bip39.mnemonicToSeed(mnemonic);\n  return new Buffer(seed).toString('hex');\n}\n\nlet unlockedMnemonicAndSeed = JSON.parse(\n  sessionStorage.getItem('unlocked') ||\n    localStorage.getItem('unlocked') ||\n    'null',\n) || { mnemonic: null, seed: null };\nexport const walletSeedChanged = new EventEmitter();\n\nexport function getUnlockedMnemonicAndSeed() {\n  return unlockedMnemonicAndSeed;\n}\n\nexport function hasLockedMnemonicAndSeed() {\n  return !!localStorage.getItem('locked');\n}\n\nfunction setUnlockedMnemonicAndSeed(mnemonic, seed) {\n  unlockedMnemonicAndSeed = { mnemonic, seed };\n  walletSeedChanged.emit('change', unlockedMnemonicAndSeed);\n}\n\nexport async function storeMnemonicAndSeed(mnemonic, seed, password) {\n  const plaintext = JSON.stringify({ mnemonic, seed });\n  if (password) {\n    const salt = randomBytes(16);\n    const kdf = 'pbkdf2';\n    const iterations = 100000;\n    const digest = 'sha256';\n    const key = await deriveEncryptionKey(password, salt, iterations, digest);\n    const nonce = randomBytes(secretbox.nonceLength);\n    const encrypted = secretbox(Buffer.from(plaintext), nonce, key);\n    localStorage.setItem(\n      'locked',\n      JSON.stringify({\n        encrypted: bs58.encode(encrypted),\n        nonce: bs58.encode(nonce),\n        kdf,\n        salt: bs58.encode(salt),\n        iterations,\n        digest,\n      }),\n    );\n    localStorage.removeItem('unlocked');\n    sessionStorage.removeItem('unlocked');\n  } else {\n    localStorage.setItem('unlocked', plaintext);\n    localStorage.removeItem('locked');\n    sessionStorage.removeItem('unlocked');\n  }\n  setUnlockedMnemonicAndSeed(mnemonic, seed);\n}\n\nexport async function loadMnemonicAndSeed(password, stayLoggedIn) {\n  const {\n    encrypted: encodedEncrypted,\n    nonce: encodedNonce,\n    salt: encodedSalt,\n    iterations,\n    digest,\n  } = JSON.parse(localStorage.getItem('locked'));\n  const encrypted = bs58.decode(encodedEncrypted);\n  const nonce = bs58.decode(encodedNonce);\n  const salt = bs58.decode(encodedSalt);\n  const key = await deriveEncryptionKey(password, salt, iterations, digest);\n  const plaintext = secretbox.open(encrypted, nonce, key);\n  if (!plaintext) {\n    throw new Error('Incorrect password');\n  }\n  const decodedPlaintext = new Buffer(plaintext).toString();\n  const { mnemonic, seed } = JSON.parse(decodedPlaintext);\n  if (stayLoggedIn) {\n    sessionStorage.setItem('unlocked', decodedPlaintext);\n  }\n  setUnlockedMnemonicAndSeed(mnemonic, seed);\n  return { mnemonic, seed };\n}\n\nasync function deriveEncryptionKey(password, salt, iterations, digest) {\n  return new Promise((resolve, reject) =>\n    pbkdf2(\n      password,\n      salt,\n      iterations,\n      secretbox.keyLength,\n      digest,\n      (err, key) => (err ? reject(err) : resolve(key)),\n    ),\n  );\n}\n\nexport function lockWallet() {\n  setUnlockedMnemonicAndSeed(null, null);\n}\n","import EventEmitter from 'events';\nimport { useConnectionConfig } from '../connection';\nimport { useListener } from '../utils';\nimport { useCallback } from 'react';\n\nconst customTokenNamesByNetwork = JSON.parse(\n  localStorage.getItem('tokenNames') ?? '{}',\n);\n\nconst nameUpdated = new EventEmitter();\nnameUpdated.setMaxListeners(100);\n\nexport function useTokenName(mint) {\n  const { endpoint } = useConnectionConfig();\n  useListener(nameUpdated, 'update');\n\n  if (!mint) {\n    return { name: null, symbol: null };\n  }\n\n  const info = customTokenNamesByNetwork?.[endpoint]?.[mint.toBase58()];\n  return { name: info?.name, symbol: info?.symbol };\n}\n\nexport function useUpdateTokenName() {\n  const { endpoint } = useConnectionConfig();\n  return useCallback(\n    function updateTokenName(mint, name, symbol) {\n      if (!customTokenNamesByNetwork[endpoint]) {\n        customTokenNamesByNetwork[endpoint] = {};\n      }\n      customTokenNamesByNetwork[endpoint][mint.toBase58()] = { name, symbol };\n      localStorage.setItem(\n        'tokenNames',\n        JSON.stringify(customTokenNamesByNetwork),\n      );\n      nameUpdated.emit('update');\n    },\n    [endpoint],\n  );\n}\n","import { PublicKey, SystemProgram, Transaction } from '@solana/web3.js';\nimport {\n  initializeAccount,\n  initializeMint,\n  TOKEN_PROGRAM_ID,\n  transfer,\n} from './instructions';\nimport { ACCOUNT_LAYOUT, getOwnedAccountsFilters, MINT_LAYOUT } from './data';\nimport bs58 from 'bs58';\n\nexport async function getOwnedTokenAccounts(connection, publicKey) {\n  let filters = getOwnedAccountsFilters(publicKey);\n  let resp = await connection._rpcRequest('getProgramAccounts', [\n    TOKEN_PROGRAM_ID.toBase58(),\n    {\n      commitment: connection.commitment,\n      filters,\n    },\n  ]);\n  if (resp.error) {\n    throw new Error(\n      'failed to get token accounts owned by ' +\n        publicKey.toBase58() +\n        ': ' +\n        resp.error.message,\n    );\n  }\n  return resp.result\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data: bs58.decode(data),\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }))\n    .filter(({ accountInfo }) => {\n      // TODO: remove this check once mainnet is updated\n      return filters.every((filter) => {\n        if (filter.dataSize) {\n          return accountInfo.data.length === filter.dataSize;\n        } else if (filter.memcmp) {\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\n          return accountInfo.data\n            .slice(\n              filter.memcmp.offset,\n              filter.memcmp.offset + filterBytes.length,\n            )\n            .equals(filterBytes);\n        }\n        return false;\n      });\n    });\n}\n\nexport async function createAndInitializeMint({\n  connection,\n  payer, // Account for paying fees\n  mint, // Account to hold token information\n  amount, // Number of tokens to issue\n  decimals,\n  initialAccount, // Account to hold newly issued tokens, if amount > 0\n  mintOwner, // Optional account, allowed to mint tokens\n}) {\n  let transaction = SystemProgram.createAccount({\n    fromPubkey: payer.publicKey,\n    newAccountPubkey: mint.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(\n      MINT_LAYOUT.span,\n    ),\n    space: MINT_LAYOUT.span,\n    programId: TOKEN_PROGRAM_ID,\n  });\n  let signers = [payer, mint];\n  if (amount) {\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: initialAccount.publicKey,\n        lamports: await connection.getMinimumBalanceForRentExemption(\n          ACCOUNT_LAYOUT.span,\n        ),\n        space: ACCOUNT_LAYOUT.span,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n    );\n    signers.push(initialAccount);\n    transaction.add(\n      initializeAccount({\n        account: initialAccount.publicKey,\n        mint: mint.publicKey,\n        owner: payer.publicKey,\n      }),\n    );\n  }\n  transaction.add(\n    initializeMint({\n      mint: mint.publicKey,\n      amount,\n      decimals,\n      initialAccount: initialAccount?.publicKey,\n      mintOwner: mintOwner.publicKey,\n    }),\n  );\n  return await connection.sendTransaction(transaction, signers);\n}\n\nexport async function createAndInitializeTokenAccount({\n  connection,\n  payer,\n  mintPublicKey,\n  newAccount,\n}) {\n  let transaction = SystemProgram.createAccount({\n    fromPubkey: payer.publicKey,\n    newAccountPubkey: newAccount.publicKey,\n    lamports: await connection.getMinimumBalanceForRentExemption(\n      ACCOUNT_LAYOUT.span,\n    ),\n    space: ACCOUNT_LAYOUT.span,\n    programId: TOKEN_PROGRAM_ID,\n  });\n  transaction.add(\n    initializeAccount({\n      account: newAccount.publicKey,\n      mint: mintPublicKey,\n      owner: payer.publicKey,\n    }),\n  );\n  let signers = [payer, newAccount];\n  return await connection.sendTransaction(transaction, signers);\n}\n\nexport async function transferTokens({\n  connection,\n  owner,\n  sourcePublicKey,\n  destinationPublicKey,\n  amount,\n}) {\n  let transaction = new Transaction().add(\n    transfer({\n      source: sourcePublicKey,\n      destination: destinationPublicKey,\n      owner: owner.publicKey,\n      amount,\n    }),\n  );\n  let signers = [owner];\n  return await connection.sendTransaction(transaction, signers);\n}\n"],"sourceRoot":""}